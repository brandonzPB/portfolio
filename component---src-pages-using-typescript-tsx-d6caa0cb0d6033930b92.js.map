{"version":3,"sources":["webpack://Brandon Zirulnikoff Portfolio and Blog/./src/pages/using-typescript.tsx","webpack://Brandon Zirulnikoff Portfolio and Blog/./src/components/layout.js","webpack://Brandon Zirulnikoff Portfolio and Blog/./src/components/seo.js","webpack://Brandon Zirulnikoff Portfolio and Blog/./src/components/styles/GlobalStyle.js"],"names":["data","path","title","site","buildTime","href","Link","to","children","theme","SEO","description","lang","meta","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","GlobalStyle","createGlobalStyle"],"mappings":"wNAyCA,UA5BwD,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,qEAC2C,sCAD3C,+DAE8C,yCAF9C,wEAKA,qEAC2C,wCAD3C,oBAEM,wCAFN,gBAEsC,uCAFtC,UAIA,2DACiCD,EADjC,uBAC2D,IACxDD,EAAKG,KAAKC,UAFb,KAIA,2DACkC,IAChC,qBAAGC,KAAK,6CAAR,kCAFF,KAOA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,8B,8ECXJ,IAlBe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,gCACE,gBAAC,IAAD,MAEA,gBAAC,IAAD,MAEA,4BAAOA,GAEP,gBAAC,IAAD,CAAQC,MAAM,a,oECZpB,SAASC,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMX,EAAS,EAATA,MAC9BC,GAASW,oBAAe,YAAxBX,KAcFY,EAAkBJ,GAAeR,EAAKa,aAAaL,YACnDM,EAAY,UAAGd,EAAKa,oBAAR,aAAG,EAAmBd,MAExC,OACE,gBAAC,IAAD,CACEgB,eAAgB,CACdN,QAEFV,MAAOA,EACPiB,cAAeF,EAAY,QAAWA,EAAiB,KACvDJ,KAAM,CACJ,CACEO,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASnB,GAEX,CACEoB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAlB,EAAKa,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAASnB,GAEX,CACEkB,KAAK,sBACLC,QAASN,IAEXS,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,kFCtEae,GAAcC,E,KAAAA,IAAH","file":"component---src-pages-using-typescript-tsx-d6caa0cb0d6033930b92.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport styled from 'styled-components';\n\nimport NavBar from './NavBar';\nimport Footer from './Footer';\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <GlobalStyle />\n\n      <NavBar />\n\n      <main>{children}</main>\n\n      <Footer theme=\"light\" />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    background-color: #FFF;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`"],"sourceRoot":""}