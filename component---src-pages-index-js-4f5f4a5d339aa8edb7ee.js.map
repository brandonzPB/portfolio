{"version":3,"sources":["webpack://portfolio_blog/./src/components/layout.js","webpack://portfolio_blog/./src/components/seo.js","webpack://portfolio_blog/./src/components/styles/GlobalStyle.js","webpack://portfolio_blog/./src/components/Header.js","webpack://portfolio_blog/./src/components/SkillsList.js","webpack://portfolio_blog/./src/components/ProjectList.js","webpack://portfolio_blog/./src/components/Body.js","webpack://portfolio_blog/./src/pages/index.js"],"names":["children","modalState","map","child","React","key","uuidv4","theme","SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","GlobalStyle","createGlobalStyle","data","useState","status","display","setDisplay","headerRef","useRef","useEffect","current","banner","fluid","allFile","edges","node","childImageSharp","src","HeaderContainer","HeaderContent","TextContainer","id","className","ImageContainer","style","ref","Image","alt","DetailsContainer","ColOne","ColTwo","styled","Img","SkillsListContainer","paintings","sort","a","b","projectRef","dipslay","ProjectListContainer","ProjectsList","ProjectContainer","ProjectAnchor","to","ProjectThumbnail","ProjectTitle","ProjectDetails","ProjectLink","Link","bodyRef","BodyContainer","SkillsContainer","ProjectSection","NavLayout","layout"],"mappings":"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","file":"component---src-pages-index-js-4f5f4a5d339aa8edb7ee.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport Footer from './Footer';\n\nconst Layout = ({ children, modalState }) => {\n  return (\n    <>\n      <GlobalStyle />\n\n      <main>\n        {\n          children.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n\n      <Footer theme=\"light\" />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    background-color: #FFF;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","import Img from 'gatsby-image';\nimport React, { useState, useEffect, useRef } from \"react\"\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\n\nconst Header = ({ modalState }) => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: {ext: {regex: \"/(jpg)|(png)|(jpeg)/\"}, name: {in: \"me\"}}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxHeight: 1000, quality: 90) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }  \n  `);\n\n  const [display, setDisplay] = useState({ status: true });\n\n  const headerRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      headerRef.current = false;\n    }\n  }, [headerRef]);\n\n  useEffect(() => {\n    if (headerRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.display) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, headerRef]);\n\n  const banner = {\n    key: 0,\n    fluid: data.allFile.edges[0].node.childImageSharp.fluid,\n    src: data.allFile.edges[0].node.childImageSharp.fluid.src,\n  };\n\n  return (\n    <HeaderContainer>\n      <HeaderContent>\n        <TextContainer>\n          <div id=\"desktop\">\n            <h3>Oh hello, I'm Brandon.</h3>\n            <h3>Software <span className=\"gold-text\">Developer</span></h3>\n            <h3>and Life-Long Learner</h3>\n          </div>\n          <div id=\"mobile\">\n            <h3>Oh hello, I'm Brandon.</h3>\n            <h3>Software <span className=\"gold-text\">Developer</span></h3>\n            <h3>and Life-Long Learner</h3>\n          </div>\n        </TextContainer>\n\n        <ImageContainer style={{ display: display.status ? 'block': 'none' }} ref={headerRef}>\n          <Image fluid={banner.fluid} alt=\"Picture of me (a bald man) in a suit\" />\n        </ImageContainer>\n\n        <DetailsContainer>         \n          <ColOne>\n            <p>\n              I am a 22 year-old passionate Stoic who loves using code to create solutions and build useful, elegant, and enjoyable experiences. <br/><br/>\n              To me, code is like an infinite pile of legos with each piece being made at the will of my imagination. (inspired by V. Anton Spraul)\n            </p>\n          </ColOne>\n\n          <ColTwo>\n            <p>\n              Aside from studying economics and data science at UCLA, \n              I've used most of my free time to study, practice, and build as much as I possibly can with code.\n            </p>\n          </ColTwo>\n        </DetailsContainer>\n      </HeaderContent>\n    </HeaderContainer>\n  )\n}\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n  margin: 3rem auto 0 auto;\n  display: block;\n  text-align: center;\n  width: 70%;\n  z-index: 2;\n\n  @media screen and (max-width: 500px) {\n    width: 80%;\n  }\n`\n\nconst HeaderContent = styled.div`\n  @media screen and (max-width: 500px) {\n    margin: 5rem auto;\n    border: 2px solid transparent;\n  }\n`\n\nconst TextContainer = styled.div`\n  @keyframes fadein {\n    from {\n      opacity: 0;\n      translateY(-30px);\n    }\n\n    to {\n      opacity: 1;\n      translateY(30px);\n    }\n  }\n\n  text-align: left;\n  margin: 0 2rem;\n  font-size: 2rem;\n  font-family: 'Playfair Display', sans-serif;\n  color: #36434d;\n\n  h3 {\n    animation: fadein 2s;\n    margin: 0 auto;\n  }\n\n  #mobile {\n    display: none;\n  }\n\n  .gold-text {\n    color: #fecc27;\n  }\n\n  @media screen and (max-width: 700px) {\n    font-size: 1.25rem;\n    margin: 3rem auto;\n    width: auto;\n\n    #desktop {\n      display: none;\n    }\n\n    #mobile {\n      display: block;\n      width: 110%;\n      padding: 0;\n    }\n  }\n`\n\nconst ImageContainer = styled.div`\n  display: block;\n  margin: 2rem auto;\n\n  h3 {\n    font-size: 0.75rem;\n    color: #828282;\n    font-family: 'Open Sans', sans-serif;\n  }\n`\n\nconst Image = styled(Img)`\n  height: 50%;\n  width: 50%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`\n\nconst DetailsContainer = styled.div`\n  margin: 2rem auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: 100%;\n  color: #828282;\n\n  @media screen and (max-width: 700px) {\n    grid-template-columns: 1fr;\n    font-size: 1.25rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    flex-wrap: wrap;\n    flex: 1;\n    text-align: left;\n  }\n`\n\nconst ColOne = styled.div`\n  display: block;\n  margin: 0 auto;\n  height: 100%;\n  padding: 0 2rem;\n  line-height: 1.5rem;\n  font-family: 'Open Sans', sans-serif;\n  text-align: left;\n\n  @media screen and (max-width: 700px) {\n    padding: 0;\n    width: 100%;\n  }\n`\n\nconst ColTwo = styled.div`\n  display: block;\n  margin: 0 auto;\n  height: 100%;\n  padding: 0 2rem;\n  line-height: 1.5rem;\n  font-family: 'Open Sans', sans-serif;\n  text-align: left;\n\n  @media screen and (max-width: 700px) {\n    padding: 0;\n    margin-top: 1.5rem;\n    width: 100%;\n  }\n`","import React from 'react';\nimport styled from 'styled-components';\n\nimport  { GiTriforce } from 'react-icons/gi';\n\nconst SkillsList = () => {\n  return (\n    <SkillsListContainer>\n      <ul>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">React (TypeScript and JavaScript)</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Redux and React Context API</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Gatsby</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">HTML5</span>\n        </li>\n      </ul>\n\n      <ul>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">NodeJS and Express</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">MongoDB and NoSQL</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Jest (React Snapshots, database injections)</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">SQL</span>\n        </li>\n      </ul>\n        \n      <ul>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">GraphQL</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Sass</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">TypeORM</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">SEO</span>\n        </li>\n      </ul>\n\n      <ul>\n        <li style={{ display: 'none' }}>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">PostgreSQL</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Adobe Photoshop</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Python</span>\n        </li>\n        <li style={{ display: 'none' }}>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\"></span>\n        </li>\n      </ul>\n    </SkillsListContainer>\n  )\n}\n\nexport default SkillsList;\n\nconst SkillsListContainer = styled.div`\n  margin: 2rem auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  width: 100%;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n\n  ul {\n    margin: 0 auto;\n    width: 100%;\n    text-align: left;\n    display: block;\n\n    @media screen and (max-width: 500px) {\n      height: auto;\n      padding: 0 1.5rem;\n      width: 90%;\n      display: block;\n    }\n  }\n\n  li {\n    list-style-type: none;\n    margin: 0.5rem auto;\n    text-align: left;\n    font-family: 'Open Sans', sans-serif;\n    color: #828282;\n\n    .list-type { display: none; }\n\n    @media screen and (max-width: 500px) {\n      .list-type {\n        display: inline-block;\n        width: 1rem;\n        font-size: 1rem;\n        color: #fecc27;\n        margin-right: 0.5rem;\n      }\n    }\n  }\n\n  .list-text {}\n\n  .icon {\n    font-size: 0.75rem;\n    margin: 0 1rem;\n    color: #fecc27;\n  }\n\n  @media screen and (max-width: 500px) {\n    .icon {\n      display: none;\n    }\n  }\n`","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nconst ProjectList = ({ modalState }) => {\n  const data = useStaticQuery(graphql`\n    query MyPaintings {\n      allFile(filter: {ext: {regex: \"/(jpg)|(png)|(jpeg)/\"}, \n        name: {in: [\"painting-creatures\", \"painting-mindful\", \"painting-battleship\", \"republic310-1\"]}}) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const paintings = [...data.allFile.edges]\n    .sort((a, b) => {\n      if (a.node.name < b.node.name) return -1;\n      if (a.node.name > b.node.name) return 1;\n    });\n\n  const [display, setDisplay] = useState({ status: true });\n\n  const projectRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      projectRef.current = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (projectRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.dipslay) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, projectRef]);\n\n  return (\n    <ProjectListContainer>.\n      <h1>Projects I've Made</h1>\n\n      <ProjectsList style={{ display: display.status ? 'block' : 'none' }} ref={projectRef}>\n        <ProjectContainer >\n          <ProjectAnchor to=\"/Creatures_of_Habit\">\n            <ProjectThumbnail\n              fluid={paintings[1].node.childImageSharp.fluid} \n              src={paintings[1].node.childImageSharp.fluid.src}\n              key={1} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>Creatures of Habit</ProjectTitle>\n          <ProjectDetails>\n            I made this project to help users quantify areas of their life that are intrinsically qualitative (e.g., mental health).\n          </ProjectDetails>\n          <ProjectLink to=\"/Creatures_of_Habit\">View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to=\"/Republic_310\">\n            <ProjectThumbnail \n              fluid={paintings[3].node.childImageSharp.fluid} \n              src={paintings[3].node.childImageSharp.fluid.src}\n              key={3} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>The Republic 310</ProjectTitle>\n          <ProjectDetails>I made this project for an e-commerce startup who wanted their own full-stack website.</ProjectDetails>\n          <ProjectLink to=\"/Republic_310\">View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to=\"/Mindful\">\n            <ProjectThumbnail \n              fluid={paintings[2].node.childImageSharp.fluid} \n              src={paintings[2].node.childImageSharp.fluid.src}\n              key={2} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>mindful.io</ProjectTitle>\n          <ProjectDetails>I made this project for the purpose of helping users to become more mindful in their daily life.</ProjectDetails>\n          <ProjectLink to=\"/Mindful\">View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to=\"/Battleship\">\n            <ProjectThumbnail \n              fluid={paintings[0].node.childImageSharp.fluid} \n              src={paintings[0].node.childImageSharp.fluid.src}\n              key={0} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>Battleship</ProjectTitle>\n          <ProjectDetails>This was the first project I made solely for the purpose of putting my skills into practice.</ProjectDetails>\n          <ProjectLink to=\"/Battleship\">View Project</ProjectLink>\n        </ProjectContainer>\n      </ProjectsList>\n    </ProjectListContainer>\n  )\n}\n\nexport default ProjectList;\n\nconst ProjectListContainer = styled.div``;\n\nconst ProjectsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin: 0 auto;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ProjectContainer = styled.div`\n  display: block;\n  text-align: center;\n  margin: 2rem auto 8rem auto;\n  height: auto;\n  width: auto;\n  font-family: 'Open Sans', sans-serif;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst ProjectAnchor = styled(Link)``\n\nconst ProjectThumbnail = styled(Img)`\n  height: 75%;\n  width: 75%;\n  margin: 1rem auto;\n  border-radius: 5px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  transition: transform 0.3s;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 500px) {\n    height: auto;\n    display: block;\n  }\n`\n\nconst ProjectTitle = styled.h3`\n  margin: 2rem 0 0 0;\n  font-size: 1.5rem;\n  color: #36434d;\n`\n\nconst ProjectDetails = styled.p`\n  line-height: 1.25rem;\n  margin: 1rem auto;\n  width: 90%;\n  text-align: center;\n  color: #828282;\n`\n\nconst ProjectLink = styled(Link)`\n  color: #0070b7;\n  transition: border-bottom 0.3s ease 0s;\n  text-decoration: none;\n  font-family: 'Open Sans', sans-serif;\n\n  &:visited, &:link {\n    color: #0070b7;\n  }\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48cef7; \n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 1.25rem;\n  }\n`","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components';\n\nimport SkillsList from './SkillsList';\nimport ProjectList from './ProjectList';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\n\nconst Body = ({ modalState }) => {\n  const [display, setDisplay] = useState({ status: true });\n\n  const bodyRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      bodyRef.current = false;\n    }\n  }, [bodyRef]);\n\n  useEffect(() => {\n    if (bodyRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.display) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, bodyRef]);\n\n  return ( \n    <BodyContainer>\n      <SkillsContainer id=\"skills\">\n        <h1>My Skills</h1>\n        <SkillsList />\n      </SkillsContainer>\n\n      <ProjectSection id=\"projects\">\n        <ProjectList modalState={modalState} />\n      </ProjectSection>\n    </BodyContainer>\n  )\n}\n\nexport default Body\n\nconst BodyContainer = styled.div`\n  margin: 0 7rem;\n  display: block;\n\n  @media screen and (max-width: 700px) {\n    margin: 0 1rem;\n  }\n`\n\nconst SkillsContainer = styled.div`\n  margin: 5rem auto;\n  width: 85%;\n\n  h1 {\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  @media screen and (max-width: 700px) {\n    display: block;\n\n    h1 {\n      text-align: center;\n    }\n  }\n`\n\nconst ProjectSection = styled.div`\n  display: block;\n  margin: 0 auto;\n  text-align: center;\n  width: 85%;\n\n  h1 {\n    text-align: left;\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  @media screen and (max-width: 700px) {\n    grid-template-columns: 1fr;\n\n    h1 {\n      text-align: center;\n    }\n  }\n`\n","import React from \"react\"\n\nimport NavLayout from '../components/NavLayout';\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from '../components/Header';\nimport Body from '../components/Body';\n\nconst IndexPage = () => (  \n  <NavLayout layout={'portfolio'}>\n    <Layout>\n      <SEO title=\"Brandon Zirulnikoff | Software Developer\" />\n      <Header />\n      <Body />\n    </Layout>\n  </NavLayout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}