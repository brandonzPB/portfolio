{"version":3,"sources":["webpack://portfolio_blog/./src/components/styles/BlogStyle.js","webpack://portfolio_blog/./src/components/Blog/BlogLayout.js","webpack://portfolio_blog/./src/components/Blog/MyIcon.js","webpack://portfolio_blog/./src/components/Blog/PostPreview.js","webpack://portfolio_blog/./src/components/seo.js","webpack://portfolio_blog/./src/components/Blog/TagIndex.js","webpack://portfolio_blog/./src/pages/tags.js"],"names":["BlogStyle","createGlobalStyle","children","modalState","map","child","React","key","uuidv4","styled","data","useStaticQuery","useState","status","display","setDisplay","iconRef","useRef","useEffect","current","myIcon","allFile","edges","node","childImageSharp","IconContainer","style","ref","IconLink","to","MyIconImage","fluid","alt","Link","Img","post","inTags","setTag","PostPreviewContainer","PostLink","path","title","PostInfo","date","TagContainer","PuzzlePieces","tags","tag","idx","TagLinkContainer","id","ActiveTag","onClick","TagLink","ContentPreviewContainer","excerpt","SEO","description","lang","meta","site","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","TagIndex","currentTag","setCurrentTag","tagMap","allMarkdownRemark","reduce","index","frontmatter","tagArr","push","sort","a","b","collection","updated","components","taggedPosts","setTaggedPosts","trim","filteredPosts","filter","indexOf","contentPreview","html","slice","reg","RegExp","replace","postObj","PostPreview","uuid","updateTagState","useCallback","TagComponents","className","TagIndexContainer","Helmet","PostHeader","PostsLink","TagContentContainer","NoTagText","AllTags","AllTaggedPosts","NavLayout","layout","BlogLayout"],"mappings":"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","file":"component---src-pages-tags-js-fe77f48e883a7dfb648b.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const BlogStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { BlogStyle } from '../styles/BlogStyle';\n\nimport BlogHeader from './BlogHeader';\nimport Footer from '../Footer';\n\nconst BlogLayout = ({ children, modalState }) => {\n  return (\n    <>\n      <BlogStyle />\n\n      <main>\n        {\n          children.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n    </>\n  )\n}\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default BlogLayout;\n\nconst BlogContainer = styled.div`\n  ${'' /* background: linear-gradient(0.25turn,\n    #FFF,\n    #fff,\n    #fff,\n    #fff,\n    #fff,\n    #ECEBEB,\n    #E7E5E5,\n    #D5D0D2,\n    #C5BFC4,\n    #CECDD5\n  ); */}\n  width: 100%;\n`;\n\nconst BlogFooterContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(100, 100, 100, 0.6);\n  padding: 0.5rem 0;\n`;\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst MyIcon = ({ modalState }) => {\n  const data = useStaticQuery(graphql`\n    query MyIcon {\n      allFile(filter: {\n        ext: {\n          regex: \"/png/\"\n        },\n      name: {\n        in: [\"me_3\"]\n      }}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const [display, setDisplay] = useState({ status: true });\n\n  const iconRef = useRef(false);\n\n  useEffect(() => {\n    return () => {\n      iconRef.current = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (iconRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.display) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, iconRef]);\n\n  const myIcon = data.allFile.edges[0].node.childImageSharp;\n\n  return (\n    <IconContainer \n      style={{\n        display: display.status ? 'inline' : 'none'\n      }}\n      ref={iconRef}\n    >\n      <IconLink to=\"/Brandon\" >\n      <MyIconImage fluid={myIcon.fluid} alt=\"A small picture of me wearing a suit.\" />\n    </IconLink>\n    </IconContainer>\n  )\n}\n\nexport default MyIcon;\n\nconst IconContainer = styled.div``;\n\nconst IconLink = styled(Link)``;\n\nconst MyIconImage = styled(Img)`\n  width: 25px;\n  display: inline-block;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { HiPuzzle } from 'react-icons/hi';\n\nimport MyIcon from './MyIcon';\n\nconst PostPreview = ({ post, inTags = false, setTag, modalState, }) => {\n  return (\n    <PostPreviewContainer>\n      <PostLink to={post.path}>{post.title}</PostLink>\n      \n      <PostInfo>\n        Posted by Brandon&nbsp;\n        <MyIcon modalState={modalState} />\n        &nbsp;on {post.date}\n      </PostInfo>\n\n      <TagContainer>\n        {\n          inTags\n            ? <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <ActiveTag onClick={() => setTag(tag)}>{tag}</ActiveTag>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n            : <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <TagLink to=\"/tags\">{tag}</TagLink>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n        }\n      </TagContainer>\n\n      <ContentPreviewContainer>\n        {post.excerpt}\n      </ContentPreviewContainer>\n    </PostPreviewContainer>\n  )\n}\n\nexport default PostPreview;\n\nconst PostPreviewContainer = styled.div`\n  display: block;\n  margin: 0 auto;\n  width: 60%;\n  text-align: left;\n  margin: 2rem auto;\n  height: auto;\n  \n  @media screen and (max-width: 500px) {\n    margin: 1rem auto;\n    width: 80%;\n  }\n`;\n\nconst PostLink = styled(Link)`\n  text-decoration: none;\n  font-size: 2.25rem;\n  border-bottom: 2px solid #0070B7;\n  color: #0070B7;\n  margin: 1rem auto;\n  font-family: 'Roboto', sans-serif;\n  transition: border-bottom 0.2s ease;\n\n  &:link, &:visited {\n    color: #0070B7;\n  }\n\n  &:hover {\n    border-bottom: none;\n    color: #95BCDE;\n  }\n`;\n\nconst PostInfo = styled.div`\n  display: block;\n  margin: 0.5rem auto;\n`;\n\nconst TagContainer = styled.div`\n  display: block;\n  margin: 1rem auto;\n`;\n\nconst PuzzlePieces = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst TagLinkContainer = styled.div`\n  border: 1px solid #0070b7;\n  border-radius: 5px;\n  padding: 0.25rem 0;\n  text-align: center;\n  width: 7rem;\n\n  &:hover {\n    color: #5ED3F3;\n    border-color: #5ED3F3;\n  }\n\n  #puzzle {\n    font-size: 0.75rem;\n    color: #0070b7;\n  }\n\n  #puzzle:hover {\n    color: #5ed3f3;\n  }\n`;\n\nconst ActiveTag = styled.span`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:active, &:link {\n    color: #0070b7;\n  }\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst ContentPreviewContainer = styled.div`\n  display: block;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { v4 as uuid } from 'uuid';\nimport { HiPuzzle } from 'react-icons/hi';\n\nimport PostPreview from './PostPreview';\n\nexport default function TagIndex({ data, modalState }) {\n  const [currentTag, setCurrentTag] = useState({ title: '' });\n\n  // reduce data to map of tags\n  const tagMap = data.allMarkdownRemark.edges.reduce((map, {node}) => {\n    for (const index in node.frontmatter.tags) {\n      const tag = node.frontmatter.tags[index];\n      if (!(tag in map)) map[tag] = tag;\n    }\n    return map;\n  }, {});\n\n  let tagArr = [];\n\n  // push each tag to tagArr\n  for (const tag in tagMap) {\n    tagArr.push(tag);\n  }\n\n  // sort tags in alphabetical order; not many tags,\n  // so optimization is not an issue here\n  tagArr = tagArr.sort((a, b) => a - b);\n\n  const [taggedPosts, setTaggedPosts] = useState({\n    collection: data.allMarkdownRemark.edges.map(({ node }) => {\n      return { ...node, }\n    }),\n    updated: false,\n    components: []\n  });\n\n  // UPDATES ON TAG FILTER UPDATE\n  useEffect(() => {\n    // no tag change (\"null\" case)\n    if (taggedPosts.updated) return;\n\n    // no tag (reset to all posts)\n    if (!currentTag.title.trim()) {\n      return setTaggedPosts({\n        ...taggedPosts, \n        collection: data.allMarkdownRemark.edges.map(({ node }) => {\n          return { ...node, }\n        }),\n        updated: true\n      });\n    }\n\n    // filter data down to array of posts with current tag\n    const filteredPosts = data.allMarkdownRemark.edges.filter(({ node }) => {\n      return node.frontmatter.tags.indexOf(currentTag.title) > -1;\n    });\n\n    const components = filteredPosts.map(post => {\n      // create content preview by getting slice of post HTML\n      const contentPreview = post.node.html.slice(3, 150) + '...';\n      const reg = new RegExp('<br>', 'g');\n      const excerpt = contentPreview.replace(reg, ' ');\n\n      // reduce PostPreview props\n      const postObj = {\n        title: post.node.frontmatter.title,\n        date: post.node.frontmatter.date,\n        path: post.node.frontmatter.path,\n        tags: post.node.frontmatter.tags,\n        excerpt: excerpt,\n      }\n  \n      return (\n        <PostPreview \n          post={postObj}\n          key={uuid()}\n          inTags={true}\n          setTag={updateTagState}\n          modalState={modalState}\n        />\n      )\n    });\n    \n    // set taggedPosts to filtered array\n    return setTaggedPosts({\n      ...taggedPosts,\n      collection: filteredPosts.slice(),\n      updated: true,\n      components: components.slice()\n    });\n  }, [currentTag, taggedPosts, setTaggedPosts]);\n\n  // UPDATE TAG STATE\n  const updateTagState = useCallback((tag) => {\n    setCurrentTag({ ...currentTag, title: tag });\n    setTaggedPosts({ ...taggedPosts, updated: false });\n  }, [setTaggedPosts, setCurrentTag]);\n\n  // TAG COMPONENTS\n  const TagComponents = tagArr.map((tag, index) => (\n    <li key={index} className=\"tag-list-item\">\n      <HiPuzzle id=\"puzzle\" />\n      <span \n        className=\"tag-list-text\" \n        onClick={() => updateTagState(tag)}\n      >\n        {tag}\n      </span>\n    </li>\n  ));\n\n  return (\n    <TagIndexContainer>\n      <Helmet title={`The Stoic Programmer | Tags`} />\n\n      <PostHeader>\n        <PostsLink to=\"/learn\">Browse Posts</PostsLink>\n      </PostHeader>\n      \n      <TagContentContainer>\n        <NoTagText style={{ display: currentTag.title.trim() ? 'none' : 'block' }}>\n          Click on a Tag to Filter the Posts!\n        </NoTagText>\n\n        <AllTags>{TagComponents}</AllTags>\n\n        <AllTaggedPosts>\n          {taggedPosts.components}\n        </AllTaggedPosts>\n      </TagContentContainer>\n    </TagIndexContainer>\n  )\n}\n\nconst TagIndexContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.5);\n  height: auto;\n  padding: 2rem 0;\n`;\n\nconst TagContentContainer = styled.div`\n  margin: 2rem auto 4rem auto;\n  width: 80%;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding-bottom: 2.5rem;\n`;\n\nconst PostHeader = styled.div`\n  display: block;\n  fontSize: 1.5rem;\n  margin: 2rem auto;\n  text-align: center;\n`;\n\nconst PostsLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  border-bottom: 2px solid black;\n  transition: border-bottom 0.3s ease 0s;\n  color: black;\n  text-align: center;\n  font-size: 1.75rem;\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: transparent;\n  }\n`;\n\nconst NoTagText = styled.span`\n  margin: 2rem auto 0 auto;\n  text-align: center;\n  font-size: 1.25rem;\n`;\n\nconst AllTags = styled.div`\n  @keyframes jiggle {\n    0% {\n      transform: rotate(10deg);\n    }\n\n    20% {\n      transform: rotate(-10deg);\n    }\n\n    40% {\n      transform: rotate(10deg);\n    }\n\n    60% {\n      transform: rotate(-10deg);\n    }\n\n    80% {\n      transform: rotate(10deg);\n    }\n\n    100% {\n      transform: rotate(-10deg);\n    }\n  }\n\n  max-width: 70%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  flex-wrap: wrap;\n  margin: 2rem auto;\n\n  .tag-list-item {\n    list-style-type: none;\n    margin: 0 auto 0 3rem;\n    width: 26%;\n    font-weight: 600;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: black;\n  }\n\n  .tag-list-item:hover {\n    color: #828282;\n  }\n\n  #puzzle {\n    color: #fecc27;\n    animation: jiggle 0.5s ease-out 0s alternate once;\n    background: none;\n    margin-right: 0.5rem;\n    margin-top: 0.75rem;\n  }\n\n  #puzzle:hover {\n    animation: jiggle 0.2s;\n  }\n`;\n\nconst AllTaggedPosts = styled.div`\n  margin: 2rem auto;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport NavLayout from '../components/NavLayout';\nimport BlogLayout from '../components/Blog/BlogLayout';\nimport SEO from '../components/seo';\nimport TagIndex from '../components/Blog/TagIndex';\n\nconst Tags = () => {\n  const data = useStaticQuery(graphql`\n    query MyTags {\n      allMarkdownRemark {\n        edges {\n          node {\n            html\n            frontmatter {\n              tags\n              path\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <NavLayout layout={'blog'}>\n      <BlogLayout>\n        <SEO title=\"Browse topics | the Stoic Programmer\" />\n        <TagIndex data={data} />\n      </BlogLayout>\n    </NavLayout>\n  )\n}\n\nexport default Tags;\n"],"sourceRoot":""}