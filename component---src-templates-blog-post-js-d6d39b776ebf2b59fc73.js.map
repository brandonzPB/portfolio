{"version":3,"sources":["webpack://portfolio_blog/./src/components/styles/BlogStyle.js","webpack://portfolio_blog/./src/assets/images/epictetus.jpg","webpack://portfolio_blog/./src/components/Blog/BlogHeader.js","webpack://portfolio_blog/./src/components/Blog/BlogLayout.js","webpack://portfolio_blog/./src/components/Blog/MyIcon.js","webpack://portfolio_blog/./src/templates/blog-post.js"],"names":["BlogStyle","createGlobalStyle","data","useStaticQuery","stoic","key","fluid","allFile","edges","node","childImageSharp","src","alt","HeaderContainer","WebContainer","style","backgroundImage","epictetus","backgroundSize","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundColor","HeaderTextContainer","HeaderText","className","MobileContainer","Epictetus","MobileText","styled","Img","BlogContainer","BlogFooterContainer","children","NavBar","Footer","theme","myIcon","IconLink","to","MyIconImage","Link","Template","post","markdownRemark","TagComponents","frontmatter","tags","map","tag","index","TagListItem","id","TagLink","title","BlogPostContainer","BrowseText","BrowseLink","PostContent","PostTitle","PostInfo","date","TagList","InnerHtmlContainer","dangerouslySetInnerHTML","__html","html"],"mappings":"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","file":"component---src-templates-blog-post-js-d6d39b776ebf2b59fc73.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const BlogStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","export default __webpack_public_path__ + \"static/epictetus-2a200291508b52c07e353a19246971d8.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport epictetus from '../../assets/images/epictetus.jpg';\n\nconst BlogHeader = () => {\n  const data = useStaticQuery(graphql`\n    query MyStoic {\n      allFile(filter: {\n        ext: {\n          regex: \"/(jpeg)|(jpg)|(png)/\"\n        }, \n        name: {\n          in: \"epictetus\"\n        }}) {\n          edges {\n            node {\n              childImageSharp {\n                fluid(maxHeight: 1000, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n      }\n    }\n  `);\n\n  const stoic = {\n    key: 0,\n    fluid: data.allFile.edges[0].node.childImageSharp.fluid,\n    src: data.allFile.edges[0].node.childImageSharp.fluid.src,\n    alt: \"Epictetus writing code\"\n  };\n\n  return (\n    <HeaderContainer>\n      <WebContainer style={{ \n        backgroundImage: `url(${epictetus})`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'right center',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: 'transparent',\n      }}>\n        <HeaderTextContainer>\n          <HeaderText>\n            Learn with the Stoic&nbsp; \n            <span className=\"gold-text\">\n              Programmer\n            </span>\n          </HeaderText>\n        </HeaderTextContainer>\n      </WebContainer>\n\n      <MobileContainer>\n        <Epictetus fluid={stoic.fluid} src={stoic.src} alt={stoic.alt} key={0} />\n\n        <MobileText>\n          Learn with the Stoic&nbsp;\n          <span className=\"gold-text\">\n            Programmer\n          </span>\n        </MobileText>\n      </MobileContainer>\n    </HeaderContainer>\n  )\n}\n\nexport default BlogHeader;\n\nconst HeaderContainer = styled.div`\n  width: 80vw;\n  height: 35rem;\n  margin-left: 8.5rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\nconst WebContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.2);\n  height: 100%;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst HeaderTextContainer = styled.div`\n  width: 60%;\n  margin: 0 4rem 0 2rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 1rem;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  margin: 0 auto;\n  font-size: 3.5rem;\n  color: white;\n  text-align: center;\n  font-family: 'Playfair Display', sans-serif;\n\n  .gold-text {\n    color: #fecc27;\n  }\n`;\n\nconst MobileContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: auto;\n\n  @media only screen and (min-width: 700px) {\n    display: none;\n  }\n`;\n\nconst Epictetus = styled(Img)`\n  display: none;\n\n  @media screen and (max-width: 500px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst MobileText = styled.h1`\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 3rem;\n  text-align: center;\n  width: 80%;\n\n  .gold-text {\n    color: #fecc27;\n    display: block;\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components';\nimport { BlogStyle } from '../styles/BlogStyle';\n\nimport NavBar from '../NavBar';\nimport BlogHeader from './BlogHeader';\nimport Footer from '../Footer';\n\nconst BlogLayout = ({ children }) => {\n  return (\n    <BlogContainer>\n      <BlogStyle />\n\n      <NavBar />\n      <BlogHeader />\n\n      <main>{children}</main>\n\n      <BlogFooterContainer>\n        <Footer theme={'dark'} />\n      </BlogFooterContainer>\n    </BlogContainer>\n  )\n}\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nconst BlogContainer = styled.div`\n  ${'' /* background: linear-gradient(0.25turn,\n    #FFF,\n    #fff,\n    #fff,\n    #fff,\n    #fff,\n    #ECEBEB,\n    #E7E5E5,\n    #D5D0D2,\n    #C5BFC4,\n    #CECDD5\n  ); */}\n  width: 100%;\n`;\n\nconst BlogFooterContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(100, 100, 100, 0.6);\n  padding: 0.5rem 0;\n`;\n\nexport default BlogLayout;\n","import React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst MyIcon = () => {\n  const data = useStaticQuery(graphql`\n    query MyIcon {\n      allFile(filter: {\n        ext: {\n          regex: \"/png/\"\n        },\n      name: {\n        in: [\"me_3\"]\n      }}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const myIcon = data.allFile.edges[0].node.childImageSharp;\n\n  return (\n    <IconLink to=\"/Brandon\">\n      <MyIconImage fluid={myIcon.fluid} alt=\"A small picture of me wearing a suit.\" />\n    </IconLink>\n  )\n}\n\nexport default MyIcon;\n\nconst IconLink = styled(Link)``;\n\nconst MyIconImage = styled(Img)`\n  width: 25px;\n  display: inline-block;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { HiPuzzle } from 'react-icons/hi';\n\nimport '../css/blog-post.css';\n\nimport BlogLayout from '../components/Blog/BlogLayout';\nimport Footer from '../components/Footer';\nimport MyIcon from '../components/Blog/MyIcon';\n\nexport default function Template({ data }) {\n  // data is injected with GraphQL query\n  const { markdownRemark: post } = data; // data.markdownRemark holds post data\n\n  const TagComponents = post.frontmatter.tags.map((tag, index) => (\n    <TagListItem key={index}>\n      <HiPuzzle id=\"puzzle\" />\n      <TagLink to={`/tags`}>{tag}</TagLink>\n    </TagListItem>\n  ));\n\n  return (\n    <BlogLayout>\n      <Helmet title={`Learn with The Stoic Programmer - ${post.frontmatter.title}`} />\n\n      <BlogPostContainer>\n        <BrowseText>\n          <BrowseLink to=\"/learn\">Browse Posts</BrowseLink>\n        </BrowseText>\n\n        <PostContent>\n          <PostTitle>{post.frontmatter.title}</PostTitle>\n\n          <PostInfo>\n            Posted by Brandon&nbsp;\n            <MyIcon />\n            &nbsp;on {post.frontmatter.date}\n          </PostInfo>\n\n          <TagList>\n            {TagComponents}\n          </TagList>\n\n          <InnerHtmlContainer>\n            <div className=\"blog-post-content\" dangerouslySetInnerHTML={{ __html: post.html }} />\n          </InnerHtmlContainer>\n        </PostContent>\n      </BlogPostContainer>\n    </BlogLayout>\n  )\n}\n\nconst BlogPostContainer = styled.div`\n  border-radius: 10px;\n  width: 100%;\n  height: auto;\n  padding: 2rem 0 0 0;\n  margin: 0 auto;\n  background: linear-gradient(0.25turn,\n    transparent,\n    rgba(255, 255, 255, 1)\n  );\n`;\n\nconst BrowseText = styled.p`\n  display: block;\n  fontSize: 1.5rem;\n  margin: 2rem auto;\n  text-align: center;\n`;\n\nconst BrowseLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  border-bottom: 2px solid #0070b7;\n  transition: border-bottom 0.3s ease 0s;\n  color: #0070b7;\n  text-align: center;\n  font-size: 1.75rem;\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: transparent;\n  }\n`;\n\nconst PostContent = styled.div`\n  border-radius: 10px;\n  width: 90%;\n  height: auto;\n  padding: 3rem 0;\n  margin: 0 auto;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst PostTitle = styled.h1`\n  color: black;\n  font-size: 3rem;\n  margin: 0 auto 2.5rem auto;\n`;\n\nconst PostInfo = styled.p`\n  margin: 0 auto 1rem auto;\n  width: 60%;\n  text-align: center;\n  color: #828282;\n`;\n\nconst TagList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst TagListItem = styled.div`\n  @keyframes jiggle {\n    0% {\n      transform: rotate(10deg);\n    }\n\n    20% {\n      transform: rotate(-10deg);\n    }\n\n    40% {\n      transform: rotate(10deg);\n    }\n\n    60% {\n      transform: rotate(-10deg);\n    }\n\n    80% {\n      transform: rotate(10deg);\n    }\n\n    100% {\n      transform: rotate(-10deg);\n    }\n  }\n\n  border: 1px solid #0070b7;\n  border-radius: 5px;\n  padding: 0.25rem 0;\n  text-align: center;\n  width: 7rem;\n  color: #0070b7;\n\n  &:hover {\n    color: #5ED3F3;\n    border-color: #5ED3F3;\n  }\n\n  #puzzle {\n    font-size: 0.75rem;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n  color: #0070b7;\n\n  &:active, &:link {\n    color: #0070b7;\n  }\n\n  &:hover {\n  color: #5ED3F3;\n  }\n`;\n\nconst InnerHtmlContainer = styled.div`\n  margin: 2rem auto;\n  background: none;\n  width: 80%;\n  font-size: 1.15rem;\n`;\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}