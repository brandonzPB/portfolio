{"version":3,"sources":["webpack://portfolio_blog/./src/components/Project.js","webpack://portfolio_blog/./src/components/ProjectFooter.js","webpack://portfolio_blog/./src/components/ProjectLayout.js","webpack://portfolio_blog/./src/components/seo.js","webpack://portfolio_blog/./src/components/styles/GlobalStyle.js","webpack://portfolio_blog/./src/pages/Mindful.js"],"names":["projectProps","modalState","tech","stackComponents","stack","map","index","key","className","style","display","icon","thumbnail","src","data","fluid","alt","alt1","screenshot","alt2","ProjectContainer","HeaderContainer","title","details","DetailsContainer","ListContainer","LinkContainer","href","link","target","rel","Thumbnail","id","sourceCode","ImageContainer","Screenshot","StoryContainer","PurposeContainer","purpose","TechContainer","LessonsContainer","lessons","styled","Img","otherA","otherB","images","useStaticQuery","allFile","edges","reduce","array","img","console","log","node","name","push","childImageSharp","FooterContainer","FooterHeadline","FooterContent","ProjectAnchor","to","ProjectThumbnail","ProjectTitle","ProjectLink","Link","children","child","React","uuidv4","theme","SEO","description","lang","meta","site","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","GlobalStyle","createGlobalStyle"],"mappings":"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","file":"component---src-pages-mindful-js-73b014c5d28304048e1e.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport 'fontsource-roboto';\n\nimport { CgPokemon } from 'react-icons/cg';\nimport { FaPeace } from 'react-icons/fa';\nimport { GiBattleship, GiPalmTree } from 'react-icons/gi';\n\nconst Project = ({ projectProps, modalState }) => {\n  const { tech } = projectProps;\n  \n  const stackComponents = projectProps.stack.map((tech, index) => {\n    return (\n      <li key={index}>\n        <CgPokemon className=\"list-o\" style={{ display: projectProps.icon === 'creatures' ? 'inline-block' : 'none' }} />\n        <FaPeace className=\"list-o\" style={{ display: projectProps.icon === 'mindful' ? 'inline-block' : 'none' }} />\n        <GiBattleship className=\"list-o\" style={{ display: projectProps.icon === 'battleship' ? 'inline-block' : 'none' }} />\n        <GiPalmTree className=\"list-o\" style={{ display: projectProps.icon === 'republic' ? 'inline-block' : 'none'} } />\n        {tech}\n      </li>\n    )\n  });\n\n  const thumbnail = {\n    src: projectProps.data[1].src,\n    fluid: projectProps.data[1].fluid,\n    alt: projectProps.alt1\n  };\n\n  const screenshot = {\n    src: projectProps.data[0].src,\n    fluid: projectProps.data[0].fluid,\n    alt: projectProps.alt2\n  };\n  \n  return (\n    <ProjectContainer>\n      \n      <HeaderContainer>\n        <h1>{projectProps.title}</h1>\n        <p>{projectProps.details}</p>\n      </HeaderContainer>\n\n      <DetailsContainer>\n        <ListContainer>\n          <h1>Technologies Used</h1>\n          <ul>\n            {stackComponents}\n          </ul>\n        </ListContainer>\n        \n        <LinkContainer style={{ display: modalState.display ? 'none' : 'block' }}>\n          <a \n            href={projectProps.link} \n            target=\"_blank\" \n            rel=\"noreferrer\"\n          >\n            <Thumbnail \n              src={thumbnail.src} \n              fluid={thumbnail.fluid} \n              alt={thumbnail.alt} \n            />\n          </a>\n\n          <a \n            href={projectProps.link} \n            target=\"_blank\" \n            rel=\"noreferrer\" \n            style={{ \n              display: projectProps.link === '#' ? 'none' : 'inline-block' \n            }}\n          >\n            <span id=\"project-link\">View Live</span>\n          </a>\n\n          <a \n            href={projectProps.sourceCode} \n            target=\"_blank\" \n            rel=\"noreferrer\" \n            style={{ \n              display: projectProps.link === '#' ? 'none' : 'inline-block' \n            }}\n          >\n            <span id=\"source-code\">Source Code</span>\n          </a>\n        </LinkContainer>\n      </DetailsContainer>\n\n      <ImageContainer>\n        <Screenshot\n          fluid={screenshot.fluid}\n          src={screenshot.src}\n          alt={screenshot.alt}\n          style={{\n            display: modalState.display ? 'none' : 'block'\n          }}\n        >\n        </Screenshot>\n      </ImageContainer>\n\n      <StoryContainer>\n        <PurposeContainer>\n          <h1>Project Inspiration and Purpose</h1>\n          <span id=\"purpose\">{projectProps.purpose}</span>\n        </PurposeContainer>\n\n        <TechContainer>\n          <h1>The Tech that Made it Happen</h1>\n          <span id=\"tech\">{tech}</span>\n        </TechContainer>\n\n        <LessonsContainer>\n          <h1>Challenges and Lessons</h1>\n          <span id=\"lessons\">{projectProps.lessons}</span>\n        </LessonsContainer>\n      </StoryContainer>\n    </ProjectContainer>\n  )\n}\n\nexport default Project\n\nconst ProjectContainer = styled.div`\n  display: block;\n  margin: 2rem auto;\n  width: 80%;\n\n  @media screen and (max-width: 500px) {\n    margin: 2rem;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin: 2rem auto;\n  display: block;\n  width: 85%;\n\n  h1 {\n    margin-bottom: 1rem;\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  p {\n    font-family: 'Roboto', sans-serif;\n    width: 70%;\n    line-height: 1.5rem;\n    color: #828282;\n  }\n\n  @media screen and (max-width: 700px) {\n    p {\n      width: 85%;\n    }\n  }\n`\n\nconst DetailsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ListContainer = styled.div`\n  margin: 3rem auto 0 auto;\n  display: block;\n  width: 70%;\n\n  h1 {\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  ul {\n    margin: 2rem auto;\n    display: block;\n    font-family: 'Roboto', sans-serif;\n    color: #828282;\n    width: 90%;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  .list-o {\n    font-size: 1rem;\n    margin-right: 0.5rem;\n    color: #fecc27;\n  }\n`\n\nconst LinkContainer = styled.div`\n  text-align: center;\n  margin: 0 auto;\n  width: 100%;\n\n  a, a:link, a:visited {\n    color: #0070b7;\n    transition: border-bottom 0.3s ease 0;\n    text-decoration: none;\n  }\n\n  #project-link,\n  #source-code {\n    font-size: 1.5rem;\n    padding: 0 5rem;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 700px) {\n    #project-link,\n    #source-code {\n      font-size: 1.3rem;\n      padding: 0 1rem;\n    }\n  }\n\n  a:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48CEF7;\n  }\n`\n\nconst Thumbnail = styled(Img)`\n  display: block;\n  margin: 0 auto 1.5rem auto;\n  border-radius: 5px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  width: 70%;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    margin-bottom: 2.5rem;\n  }\n`\n\nconst ImageContainer = styled.div`\n  margin: 4rem auto;\n  display: block;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`\n\nconst Screenshot = styled(Img)`\n  display: block;\n  margin: 0 auto;\n  width: 75%;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  border-radius: 10px;\n`\n\nconst StoryContainer = styled.div`\n  display: block;\n  margin: 6rem auto;\n  width: 80%;\n\n  h1 {\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n    margin: 2rem auto;\n    display: block;\n  }\n\n  span {\n    font-family: 'Open Sans', sans-serif;\n    color: #828282;\n    width: 60%;\n    max-width: 60%;\n    line-height: 1.5rem;\n  }\n`\n\nconst PurposeContainer = styled.div`\n  margin-bottom: 7rem;\n`\n\nconst TechContainer = styled.div`\n  margin-bottom: 7rem;\n`\n\nconst LessonsContainer = styled.div`\n  margin-bottom: 7rem;\n`","import React from 'react'\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport 'fontsource-roboto';\n\nconst ProjectFooter = ({ otherA, otherB }) => {\n  const data = useStaticQuery(graphql`\n    query AllImagesQuery {\n      allFile(filter: {\n        ext: {\n          regex: \"/(jpg)|(png)|(jpeg)/\"\n        },\n        name: {\n          in: [\"painting-creatures\", \"painting-mindful\", \"painting-battleship\", \"republic310-1\"]\n        }\n      }) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }  \n  `);\n\n  const images = data.allFile.edges.reduce((array, img) => {\n    console.log('img', img);\n    if (img.node.name === otherA.name) {\n\n      array.push({\n        fluid: img.node.childImageSharp.fluid,\n        src: img.node.childImageSharp.fluid.src,\n        link: otherA.link,\n        title: otherA.title,\n        alt: otherA.alt\n      });\n\n    } else if (img.node.name === otherB.name) {\n\n      array.push({\n        fluid: img.node.childImageSharp.fluid,\n        src: img.node.childImageSharp.fluid.src,\n        link: otherB.link,\n        title: otherB.title,\n        alt: otherB.alt\n      });\n\n    }\n    return array;\n  }, []);\n\n  return (\n    <FooterContainer>\n      <FooterHeadline>\n        <h1>Check out my other projects</h1>\n      </FooterHeadline>\n\n      <FooterContent>\n        <ProjectContainer>\n          <ProjectAnchor to={images[0].link}>\n            <ProjectThumbnail \n              fluid={images[0].fluid}\n              src={images[0].src} \n              key={1} \n              alt={images[0].alt}\n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>{images[0].title}</ProjectTitle>\n          <ProjectLink to={images[0].link}>View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to={images[1].link}>\n            <ProjectThumbnail \n              fluid={images[1].fluid}\n              src={images[1].src} \n              key={2} \n              alt={images[1].alt}\n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>{images[1].title}</ProjectTitle>\n          <ProjectLink to={images[1].link}>View Project</ProjectLink>\n        </ProjectContainer>\n      </FooterContent>\n    </FooterContainer>\n  )\n}\n\nexport default ProjectFooter\n\nconst FooterContainer = styled.div`\n  display: block;\n  margin: 0 7rem;\n  width: 85%;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 1rem;\n  }\n`\n\nconst FooterHeadline = styled.div`\n  font-family: 'Playfair Display', sans-serif;\n  color: #36434d;\n  margin: 2rem auto;\n  display: block;\n  width: 90%;\n`\n\nconst FooterContent = styled.div`\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ProjectContainer = styled.div`\n  margin: 2rem auto;\n  display: block;\n  text-align: center;\n  width: 100%;\n  font-family: 'Open Sans', sans-serif;\n  color: #828282;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: 100%;\n    margin: 4rem auto;\n  }\n`\n\nconst ProjectAnchor = styled(Link)`\n`\n\nconst ProjectThumbnail = styled(Img)`\n  width: 25rem;\n  height: 20rem;\n  margin: 0 auto;\n  border-radius: 5px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  transition: transform 0.3s;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: auto;\n  }\n`\n\nconst ProjectTitle = styled.h3`\n  margin: 2rem auto;\n`\n\nconst ProjectLink = styled(Link)`\n  color: #0070b7;\n  transition: border-bottom 0.3s ease 0;\n  text-decoration: none;\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48cef7;\n  }\n`","import React from 'react';\nimport PropTypes from \"prop-types\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport Footer from './Footer';\n\nconst ProjectLayout = ({ children, modalState }) => {\n  return (\n    <>\n      <GlobalStyle />\n\n      <main>\n        {\n          children.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n\n      <Footer theme={'light'} />\n    </>\n  )\n}\n\nProjectLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default ProjectLayout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    background-color: #FFF;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport NavLayout from '../components/NavLayout';\nimport ProjectLayout from '../components/ProjectLayout';\nimport SEO from '../components/seo';\nimport Project from '../components/Project';\nimport ProjectFooter from '../components/ProjectFooter';\n\nconst Mindful = () => {\n  const data = useStaticQuery(graphql`\n    query MyMindfulImages {\n      allFile(filter: {ext: {regex: \"/(jpg)|(png)|(jpeg)/\"}, \n        name: {in: [\"mindful-0\", \"mindful-1\"]}}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }  \n  `);\n\n  const images = data.allFile.edges.map(img => {\n    return {\n      fluid: img.node.childImageSharp.fluid,\n      src: img.node.childImageSharp.fluid.src,\n    }\n  });\n\n  const details = `\n    I wanted the utility of this project to as simple as possible, since I wanted as many people as possible to benefit from it. \n    Mindful.io provides links to guided meditation apps and videos, information on mindfulness and meditation, including benefits, \n    techniques, and exercises. I also wrote a custom list of questions to answer after the user is done meditating, \n    for the purpose of applying that calmer state and increased mindfulness to their personal life. This app is currently used by \n    my friends, family, and classmates (and myself). \n  `;\n\n  const stack = ['React (JavaScript)', 'React Context API', 'CSS', 'vanilla JavaScript'];\n\n  const link = 'https://brandonzpb.github.io/mindful';\n\n  const sourceCode = 'https://github.com/brandonzpb/mindful.io';\n\n  const purpose = `\n    I made this project for the purpose of helping others develop the healthy habit of meditating and being more mindful. It's \n    my life's purpose to create elegant, enjoyable, and useful experiences with code, and I wanted this project to show that. \n  `;\n\n  const tech = `\n    React seemed like the best tool for the job, because I wanted to create a single-page application that is interactive and easy to use. \n    I used vanilla JavaScript to create the meditation timer and the button that saves responses to questions to the user's local device \n    (since the app does not store them).\n  `;\n\n  const lessons = `\n    I found myself studying a lot of CSS techniques and design principles (à la \"The Design of Everyday Things\" by Don Norman) while making \n    this app. \n    Initially, I customized the experience via a database that was setup to gradually \n    guide users along the mindfulness journey through questions that required an increasing level of self-honesty and integrity. \n    However, I realized that fewer people would use this app and, thus, fewer people \n    would benefit from mindfulness if they had to create an account before being able to use the app, so I completely removed the \n    backend so as to simplify and enhance the user experience.\n    After understanding these techniques, I revisited Creatures of Habit and improved upon its design and user experience. \n    I used these lessons and principles when designing The Republic 310, as well.\n  `;\n\n  const alt1 = 'Peaceful image with black stones and bamboo in the background';\n\n  const alt2 = `Screenshot of the mindful.io app; \n    a dashboard with a circular modal with app icons in the center. \n    Text says, 'Hover over one of the icons!'\n  `;\n\n  const otherA = {\n    link: '/Republic_310',\n    title: 'The Republic 310',\n    alt: `The landing page of The Republic 310. The banner is of two female surfers walking along\n      an empty beach, holding surfboards\n    `,\n    name: 'republic310-1',\n  };\n\n  const otherB = {\n    link: '/Creatures_of_Habit',\n    title: 'Creatures of Habit',\n    alt: 'Serene painting of a light blue sky, a grassy field, and the ocean in between',\n    name: 'painting-creatures',\n  };\n\n  const projectProps = {\n    title: 'mindful.io',\n    details,\n    stack,\n    link,\n    sourceCode,\n    purpose,\n    tech,\n    lessons,\n    data: images,\n    alt1,\n    alt2,\n    icon: 'mindful'\n  };\n\n  return (\n    <NavLayout>\n      <ProjectLayout>\n        <SEO title=\"mindful.io The Free Meditation Web App | BZWEB\" />\n        <Project  projectProps={projectProps} />\n        <ProjectFooter otherA={otherA} otherB={otherB} />\n      </ProjectLayout>\n    </NavLayout>\n  )\n}\n\nexport default Mindful\n"],"sourceRoot":""}