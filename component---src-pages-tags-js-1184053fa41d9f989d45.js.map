{"version":3,"sources":["webpack://portfolio_blog/./node_modules/uuid/index.js","webpack://portfolio_blog/./node_modules/uuid/lib/bytesToUuid.js","webpack://portfolio_blog/./node_modules/uuid/lib/rng-browser.js","webpack://portfolio_blog/./node_modules/uuid/v1.js","webpack://portfolio_blog/./node_modules/uuid/v4.js","webpack://portfolio_blog/./src/components/styles/BlogStyle.js","webpack://portfolio_blog/./src/assets/images/epictetus.jpg","webpack://portfolio_blog/./src/components/Blog/BlogHeader.js","webpack://portfolio_blog/./src/components/Blog/BlogLayout.js","webpack://portfolio_blog/./src/components/Blog/MyIcon.js","webpack://portfolio_blog/./src/components/Blog/PostPreview.js","webpack://portfolio_blog/./src/components/seo.js","webpack://portfolio_blog/./src/components/Blog/TagIndex.js","webpack://portfolio_blog/./src/pages/tags.js"],"names":["v1","v4","uuid","module","exports","byteToHex","i","toString","substr","buf","offset","bth","join","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","rnds","Array","r","Math","random","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","ii","BlogStyle","createGlobalStyle","data","useStaticQuery","stoic","key","fluid","allFile","edges","childImageSharp","src","alt","HeaderContainer","WebContainer","style","backgroundImage","epictetus","backgroundSize","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundColor","HeaderTextContainer","HeaderText","className","MobileContainer","Epictetus","MobileText","styled","Img","BlogContainer","BlogFooterContainer","children","NavBar","Footer","theme","myIcon","IconLink","to","MyIconImage","Link","post","inTags","setTag","myRef","useRef","useEffect","current","PostPreviewContainer","PostLink","path","title","PostInfo","date","TagContainer","PuzzlePieces","tags","map","tag","idx","TagLinkContainer","id","ActiveTag","onClick","TagLink","ContentPreviewContainer","excerpt","SEO","description","lang","meta","site","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","TagIndex","useState","currentTag","setCurrentTag","tagMap","allMarkdownRemark","reduce","index","frontmatter","tagArr","push","sort","a","collection","updated","components","taggedPosts","setTaggedPosts","trim","filteredPosts","filter","indexOf","contentPreview","html","slice","reg","RegExp","replace","postObj","PostPreview","updateTagState","useCallback","TagComponents","TagIndexContainer","Helmet","PostHeader","PostsLink","TagContentContainer","NoTagText","display","AllTags","AllTaggedPosts","BlogLayout"],"mappings":"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","file":"component---src-pages-tags-js-1184053fa41d9f989d45.js","sourcesContent":["var v1 = require('./v1');\n\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nmodule.exports = uuid;","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nmodule.exports = bytesToUuid;","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}","var rng = require('./lib/rng');\n\nvar bytesToUuid = require('./lib/bytesToUuid'); // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;","var rng = require('./lib/rng');\n\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;","import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const BlogStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","export default __webpack_public_path__ + \"static/epictetus-2a200291508b52c07e353a19246971d8.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport epictetus from '../../assets/images/epictetus.jpg';\n\nconst BlogHeader = () => {\n  const data = useStaticQuery(graphql`\n    query MyStoic {\n      allFile(filter: {\n        ext: {\n          regex: \"/(jpeg)|(jpg)|(png)/\"\n        }, \n        name: {\n          in: \"epictetus\"\n        }}) {\n          edges {\n            node {\n              childImageSharp {\n                fluid(maxHeight: 1000, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n      }\n    }\n  `);\n\n  const stoic = {\n    key: 0,\n    fluid: data.allFile.edges[0].node.childImageSharp.fluid,\n    src: data.allFile.edges[0].node.childImageSharp.fluid.src,\n    alt: \"Epictetus writing code\"\n  };\n\n  return (\n    <HeaderContainer>\n      <WebContainer style={{ \n        backgroundImage: `url(${epictetus})`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'right center',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: 'transparent',\n      }}>\n        <HeaderTextContainer>\n          <HeaderText>\n            Learn with the Stoic&nbsp; \n            <span className=\"gold-text\">\n              Programmer\n            </span>\n          </HeaderText>\n        </HeaderTextContainer>\n      </WebContainer>\n\n      <MobileContainer>\n        <Epictetus fluid={stoic.fluid} src={stoic.src} alt={stoic.alt} key={0} />\n\n        <MobileText>\n          Learn with the Stoic&nbsp;\n          <span className=\"gold-text\">\n            Programmer\n          </span>\n        </MobileText>\n      </MobileContainer>\n    </HeaderContainer>\n  )\n}\n\nexport default BlogHeader;\n\nconst HeaderContainer = styled.div`\n  width: 80vw;\n  height: 35rem;\n  margin-left: 8.5rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\nconst WebContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.2);\n  height: 100%;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst HeaderTextContainer = styled.div`\n  width: 60%;\n  margin: 0 4rem 0 2rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 1rem;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  margin: 0 auto;\n  font-size: 3.5rem;\n  color: white;\n  text-align: center;\n  font-family: 'Playfair Display', sans-serif;\n\n  .gold-text {\n    color: #fecc27;\n  }\n`;\n\nconst MobileContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: auto;\n\n  @media only screen and (min-width: 700px) {\n    display: none;\n  }\n`;\n\nconst Epictetus = styled(Img)`\n  display: none;\n\n  @media screen and (max-width: 500px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst MobileText = styled.h1`\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 3rem;\n  text-align: center;\n  width: 80%;\n\n  .gold-text {\n    color: #fecc27;\n    display: block;\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components';\nimport { BlogStyle } from '../styles/BlogStyle';\n\nimport NavBar from '../NavBar';\nimport BlogHeader from './BlogHeader';\nimport Footer from '../Footer';\n\nconst BlogLayout = ({ children }) => {\n  return (\n    <BlogContainer>\n      <BlogStyle />\n\n      <NavBar />\n      <BlogHeader />\n\n      <main>{children}</main>\n\n      <BlogFooterContainer>\n        <Footer theme={'dark'} />\n      </BlogFooterContainer>\n    </BlogContainer>\n  )\n}\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nconst BlogContainer = styled.div`\n  ${'' /* background: linear-gradient(0.25turn,\n    #FFF,\n    #fff,\n    #fff,\n    #fff,\n    #fff,\n    #ECEBEB,\n    #E7E5E5,\n    #D5D0D2,\n    #C5BFC4,\n    #CECDD5\n  ); */}\n  width: 100%;\n`;\n\nconst BlogFooterContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(100, 100, 100, 0.6);\n  padding: 0.5rem 0;\n`;\n\nexport default BlogLayout;\n","import React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst MyIcon = () => {\n  const data = useStaticQuery(graphql`\n    query MyIcon {\n      allFile(filter: {\n        ext: {\n          regex: \"/png/\"\n        },\n      name: {\n        in: [\"me_3\"]\n      }}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const myIcon = data.allFile.edges[0].node.childImageSharp;\n\n  return (\n    <IconLink to=\"/Brandon\">\n      <MyIconImage fluid={myIcon.fluid} alt=\"A small picture of me wearing a suit.\" />\n    </IconLink>\n  )\n}\n\nexport default MyIcon;\n\nconst IconLink = styled(Link)``;\n\nconst MyIconImage = styled(Img)`\n  width: 25px;\n  display: inline-block;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { HiPuzzle } from 'react-icons/hi';\nimport { v4 as uuid } from 'uuid';\n\nimport MyIcon from './MyIcon';\n\nconst PostPreview = ({ post, inTags = false, setTag, }) => {\n  const myRef = useRef(false);\n\n  useEffect(() => {\n    return () => {\n      myRef.current = false;\n    }\n  }, []);\n\n  return (\n    <PostPreviewContainer>\n      <PostLink to={post.path}>{post.title}</PostLink>\n      \n      <PostInfo>\n        Posted by Brandon&nbsp;\n        <MyIcon />\n        &nbsp;on {post.date}\n      </PostInfo>\n\n      <TagContainer>\n        {\n          inTags\n            ? <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <ActiveTag onClick={() => setTag(tag)}>{tag}</ActiveTag>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n            : <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <TagLink to=\"/tags\">{tag}</TagLink>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n        }\n      </TagContainer>\n\n      <ContentPreviewContainer>\n        {post.excerpt}\n      </ContentPreviewContainer>\n    </PostPreviewContainer>\n  )\n}\n\nexport default PostPreview;\n\nconst PostPreviewContainer = styled.div`\n  display: block;\n  margin: 0 auto;\n  width: 60%;\n  text-align: left;\n  margin: 2rem auto;\n  height: auto;\n  \n  @media screen and (max-width: 500px) {\n    margin: 1rem auto;\n    width: 80%;\n  }\n`;\n\nconst PostLink = styled(Link)`\n  text-decoration: none;\n  font-size: 2.25rem;\n  border-bottom: 2px solid #0070B7;\n  color: #0070B7;\n  margin: 1rem auto;\n  font-family: 'Roboto', sans-serif;\n  transition: border-bottom 0.2s ease;\n\n  &:link, &:visited {\n    color: #0070B7;\n  }\n\n  &:hover {\n    border-bottom: none;\n    color: #95BCDE;\n  }\n`;\n\nconst PostInfo = styled.span`\n  display: block;\n  margin: 0.5rem auto;\n`;\n\nconst TagContainer = styled.div`\n  display: block;\n  margin: 1rem auto;\n`;\n\nconst PuzzlePieces = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst TagLinkContainer = styled.div`\n  border: 1px solid #0070b7;\n  border-radius: 5px;\n  padding: 0.25rem 0;\n  text-align: center;\n  width: 7rem;\n\n  &:hover {\n    color: #5ED3F3;\n    border-color: #5ED3F3;\n  }\n\n  #puzzle {\n    font-size: 0.75rem;\n    color: #0070b7;\n  }\n\n  #puzzle:hover {\n    color: #5ed3f3;\n  }\n`;\n\nconst ActiveTag = styled.span`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:active, &:link {\n    color: #0070b7;\n  }\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst ContentPreviewContainer = styled.div`\n  display: block;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { v4 as uuid } from 'uuid';\nimport { HiPuzzle } from 'react-icons/hi';\n\nimport PostPreview from './PostPreview';\n\nexport default function TagIndex({ data }) {\n  const [currentTag, setCurrentTag] = useState({ title: '' });\n\n  // reduce data to map of tags\n  const tagMap = data.allMarkdownRemark.edges.reduce((map, {node}) => {\n    for (const index in node.frontmatter.tags) {\n      const tag = node.frontmatter.tags[index];\n      if (!(tag in map)) map[tag] = tag;\n    }\n    return map;\n  }, {});\n\n  let tagArr = [];\n\n  // push each tag to tagArr\n  for (const tag in tagMap) {\n    tagArr.push(tag);\n  }\n\n  // sort tags in alphabetical order; not many tags,\n  // so optimization is not an issue here\n  tagArr = tagArr.sort((a, b) => a - b);\n\n  const [taggedPosts, setTaggedPosts] = useState({\n    collection: data.allMarkdownRemark.edges.map(({ node }) => {\n      return { ...node, }\n    }),\n    updated: false,\n    components: []\n  });\n\n  // UPDATES ON TAG FILTER UPDATE\n  useEffect(() => {\n    // no tag change (\"null\" case)\n    if (taggedPosts.updated) return;\n\n    // no tag (reset to all posts)\n    if (!currentTag.title.trim()) {\n      return setTaggedPosts({\n        ...taggedPosts, \n        collection: data.allMarkdownRemark.edges.map(({ node }) => {\n          return { ...node, }\n        }),\n        updated: true\n      });\n    }\n\n    // filter data down to array of posts with current tag\n    const filteredPosts = data.allMarkdownRemark.edges.filter(({ node }) => {\n      return node.frontmatter.tags.indexOf(currentTag.title) > -1;\n    });\n\n    const components = filteredPosts.map(post => {\n      // create content preview by getting slice of post HTML\n      const contentPreview = post.node.html.slice(3, 150) + '...';\n      const reg = new RegExp('<br>', 'g');\n      const excerpt = contentPreview.replace(reg, ' ');\n\n      // reduce PostPreview props\n      const postObj = {\n        title: post.node.frontmatter.title,\n        date: post.node.frontmatter.date,\n        path: post.node.frontmatter.path,\n        tags: post.node.frontmatter.tags,\n        excerpt: excerpt,\n      }\n  \n      return (\n        <PostPreview \n          post={postObj}\n          key={uuid()}\n          inTags={true}\n          setTag={updateTagState}\n        />\n      )\n    });\n    \n    // set taggedPosts to filtered array\n    return setTaggedPosts({\n      ...taggedPosts,\n      collection: filteredPosts.slice(),\n      updated: true,\n      components: components.slice()\n    });\n  }, [currentTag, taggedPosts, setTaggedPosts]);\n\n  // UPDATE TAG STATE\n  const updateTagState = useCallback((tag) => {\n    setCurrentTag({ ...currentTag, title: tag });\n    setTaggedPosts({ ...taggedPosts, updated: false });\n  }, [setTaggedPosts, setCurrentTag]);\n\n  // TAG COMPONENTS\n  const TagComponents = tagArr.map((tag, index) => (\n    <li key={index} className=\"tag-list-item\">\n      <HiPuzzle id=\"puzzle\" />\n      <span \n        className=\"tag-list-text\" \n        onClick={() => updateTagState(tag)}\n      >\n        {tag}\n      </span>\n    </li>\n  ));\n\n  return (\n    <TagIndexContainer>\n      <Helmet title={`The Stoic Programmer | Tags`} />\n\n      <PostHeader>\n        <PostsLink to=\"/learn\">Browse Posts</PostsLink>\n      </PostHeader>\n      \n      <TagContentContainer>\n\n        <NoTagText style={{ display: currentTag.title.trim() ? 'none' : 'block' }}>\n          Click on a Tag to Filter the Posts!\n        </NoTagText>\n\n        <AllTags>{TagComponents}</AllTags>\n\n        <AllTaggedPosts>\n          {taggedPosts.components}\n        </AllTaggedPosts>\n      </TagContentContainer>\n    </TagIndexContainer>\n  )\n}\n\nconst TagIndexContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.5);\n  height: auto;\n  padding: 2rem 0;\n`;\n\nconst TagContentContainer = styled.div`\n  margin: 2rem auto 4rem auto;\n  width: 80%;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding-bottom: 2.5rem;\n`;\n\nconst PostHeader = styled.div`\n  display: block;\n  fontSize: 1.5rem;\n  margin: 2rem auto;\n  text-align: center;\n`;\n\nconst PostsLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  border-bottom: 2px solid black;\n  transition: border-bottom 0.3s ease 0s;\n  color: black;\n  text-align: center;\n  font-size: 1.75rem;\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: transparent;\n  }\n`;\n\nconst NoTagText = styled.span`\n  margin: 2rem auto 0 auto;\n  text-align: center;\n  font-size: 1.25rem;\n`;\n\nconst AllTags = styled.div`\n  @keyframes jiggle {\n    0% {\n      transform: rotate(10deg);\n    }\n\n    20% {\n      transform: rotate(-10deg);\n    }\n\n    40% {\n      transform: rotate(10deg);\n    }\n\n    60% {\n      transform: rotate(-10deg);\n    }\n\n    80% {\n      transform: rotate(10deg);\n    }\n\n    100% {\n      transform: rotate(-10deg);\n    }\n  }\n\n  max-width: 70%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  flex-wrap: wrap;\n  margin: 2rem auto;\n\n  .tag-list-item {\n    list-style-type: none;\n    margin: 0 auto 0 3rem;\n    width: 26%;\n    font-weight: 600;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: black;\n  }\n\n  .tag-list-item:hover {\n    color: #828282;\n  }\n\n  #puzzle {\n    color: #fecc27;\n    animation: jiggle 0.5s ease-out 0s alternate once;\n    background: none;\n    margin-right: 0.5rem;\n    margin-top: 0.75rem;\n  }\n\n  #puzzle:hover {\n    animation: jiggle 0.2s;\n  }\n`;\n\nconst AllTaggedPosts = styled.div`\n  margin: 2rem auto;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BlogLayout from '../components/Blog/BlogLayout';\nimport SEO from '../components/seo';\nimport TagIndex from '../components/Blog/TagIndex';\n\nconst Tags = () => {\n  const data = useStaticQuery(graphql`\n    query MyTags {\n      allMarkdownRemark {\n        edges {\n          node {\n            html\n            frontmatter {\n              tags\n              path\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <BlogLayout>\n      <SEO title=\"Browse topics | the Stoic Programmer\" />\n      <TagIndex data={data} />\n    </BlogLayout>\n  )\n}\n\nexport default Tags;\n"],"sourceRoot":""}