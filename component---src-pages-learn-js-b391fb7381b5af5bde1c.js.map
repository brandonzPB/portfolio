{"version":3,"sources":["webpack://portfolio_blog/./src/components/styles/BlogStyle.js","webpack://portfolio_blog/./src/components/Blog/BlogLayout.js","webpack://portfolio_blog/./src/components/Blog/MyIcon.js","webpack://portfolio_blog/./src/components/Blog/PostPreview.js","webpack://portfolio_blog/./src/components/Blog/BlogIndex.js","webpack://portfolio_blog/./src/pages/learn.js"],"names":["BlogStyle","createGlobalStyle","children","modalState","map","child","React","key","uuidv4","styled","data","useStaticQuery","useState","status","display","setDisplay","iconRef","useRef","useEffect","current","myIcon","allFile","edges","node","childImageSharp","IconContainer","style","ref","IconLink","to","MyIconImage","fluid","alt","Link","Img","post","inTags","setTag","PostPreviewContainer","PostLink","path","title","PostInfo","date","TagContainer","PuzzlePieces","tags","tag","idx","TagLinkContainer","id","ActiveTag","onClick","TagLink","ContentPreviewContainer","excerpt","Index","PostPreviewComponents","filter","frontmatter","length","postObj","PostPreview","className","Helmet","IndexContainer","TagHeader","TagsLink","InnerContainer","postData","allMarkdownRemark","contentPreview","html","slice","reg","RegExp","replace","NavLayout","layout","BlogLayout"],"mappings":"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","file":"component---src-pages-learn-js-b391fb7381b5af5bde1c.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const BlogStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { BlogStyle } from '../styles/BlogStyle';\n\nimport BlogHeader from './BlogHeader';\nimport Footer from '../Footer';\n\nconst BlogLayout = ({ children, modalState }) => {\n  return (\n    <>\n      <BlogStyle />\n\n      <main>\n        {\n          children.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n    </>\n  )\n}\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default BlogLayout;\n\nconst BlogContainer = styled.div`\n  ${'' /* background: linear-gradient(0.25turn,\n    #FFF,\n    #fff,\n    #fff,\n    #fff,\n    #fff,\n    #ECEBEB,\n    #E7E5E5,\n    #D5D0D2,\n    #C5BFC4,\n    #CECDD5\n  ); */}\n  width: 100%;\n`;\n\nconst BlogFooterContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(100, 100, 100, 0.6);\n  padding: 0.5rem 0;\n`;\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst MyIcon = ({ modalState = null }) => {\n  const data = useStaticQuery(graphql`\n    query MyIcon {\n      allFile(filter: {\n        ext: {\n          regex: \"/png/\"\n        },\n      name: {\n        in: [\"me_3\"]\n      }}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const [display, setDisplay] = useState({ status: true });\n\n  const iconRef = useRef(false);\n\n  useEffect(() => {\n    return () => {\n      iconRef.current = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (modalState !== null && iconRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.display) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, iconRef]);\n\n  const myIcon = data.allFile.edges[0].node.childImageSharp;\n\n  return (\n    <IconContainer \n      style={{\n        display: display.status ? 'inline' : 'none'\n      }}\n      ref={iconRef}\n    >\n      <IconLink to=\"/Brandon\" >\n      <MyIconImage fluid={myIcon.fluid} alt=\"A small picture of me wearing a suit.\" />\n    </IconLink>\n    </IconContainer>\n  )\n}\n\nexport default MyIcon;\n\nconst IconContainer = styled.div``;\n\nconst IconLink = styled(Link)``;\n\nconst MyIconImage = styled(Img)`\n  width: 25px;\n  display: inline-block;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { HiPuzzle } from 'react-icons/hi';\n\nimport MyIcon from './MyIcon';\n\nconst PostPreview = ({ post, inTags = false, setTag, modalState, }) => {\n  return (\n    <PostPreviewContainer>\n      <PostLink to={post.path}>{post.title}</PostLink>\n      \n      <PostInfo>\n        Posted by Brandon&nbsp;\n        <MyIcon modalState={modalState} />\n        &nbsp;on {post.date}\n      </PostInfo>\n\n      <TagContainer>\n        {\n          inTags\n            ? <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <ActiveTag onClick={() => setTag(tag)}>{tag}</ActiveTag>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n            : <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <TagLink to=\"/tags\">{tag}</TagLink>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n        }\n      </TagContainer>\n\n      <ContentPreviewContainer>\n        {post.excerpt}\n      </ContentPreviewContainer>\n    </PostPreviewContainer>\n  )\n}\n\nexport default PostPreview;\n\nconst PostPreviewContainer = styled.div`\n  display: block;\n  margin: 0 auto;\n  width: 60%;\n  text-align: left;\n  margin: 2rem auto;\n  height: auto;\n  \n  @media screen and (max-width: 500px) {\n    margin: 1rem auto;\n    width: 80%;\n  }\n`;\n\nconst PostLink = styled(Link)`\n  text-decoration: none;\n  font-size: 2.25rem;\n  border-bottom: 2px solid #0070B7;\n  color: #0070B7;\n  margin: 1rem auto;\n  font-family: 'Roboto', sans-serif;\n  transition: border-bottom 0.2s ease;\n\n  &:link, &:visited {\n    color: #0070B7;\n  }\n\n  &:hover {\n    border-bottom: none;\n    color: #95BCDE;\n  }\n`;\n\nconst PostInfo = styled.div`\n  display: block;\n  margin: 0.5rem auto;\n`;\n\nconst TagContainer = styled.div`\n  display: block;\n  margin: 1rem auto;\n`;\n\nconst PuzzlePieces = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst TagLinkContainer = styled.div`\n  border: 1px solid #0070b7;\n  border-radius: 5px;\n  padding: 0.25rem 0;\n  text-align: center;\n  width: 7rem;\n\n  &:hover {\n    color: #5ED3F3;\n    border-color: #5ED3F3;\n  }\n\n  #puzzle {\n    font-size: 0.75rem;\n    color: #0070b7;\n  }\n\n  #puzzle:hover {\n    color: #5ed3f3;\n  }\n`;\n\nconst ActiveTag = styled.span`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:active, &:link {\n    color: #0070b7;\n  }\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst ContentPreviewContainer = styled.div`\n  display: block;\n`;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nimport PostPreview from './PostPreview';\n\nimport '../../css/index.css';\n\nexport default function Index({ data, modalState }) {\n  const posts = data;\n\n  const PostPreviewComponents = posts.filter(post => post.frontmatter.title.length > 0)\n    .map(post => {\n      const postObj = {\n        title: post.frontmatter.title,\n        path: post.frontmatter.path,\n        date: post.frontmatter.date,\n        excerpt: post.excerpt,\n        tags: post.frontmatter.tags\n      }\n      return (\n        <PostPreview\n          key={post.key}\n          post={postObj}\n          modalState={modalState}\n        />\n      )\n    });\n\n  return (\n    <div className=\"blog-posts\">\n      <Helmet title={`The Stoic Programmer | Brandon Zirulnikoff`} />\n      \n      <IndexContainer>\n        <TagHeader>\n          <TagsLink to=\"/tags\">Browse Tags</TagsLink>\n        </TagHeader>\n\n        <InnerContainer>\n          {PostPreviewComponents}\n        </InnerContainer>\n      </IndexContainer>\n    </div>\n  )\n}\n\nconst IndexContainer = styled.div`\n  border-radius: 10px;\n  width: 100%;\n  height: auto;\n  padding: 2rem 0 0 0;\n  margin: 0 auto;\n  background: linear-gradient(0.25turn,\n    transparent,\n    rgba(255, 255, 255, 1)\n  );\n\n  @media screen and (max-width: 500px) {\n    padding: 0;\n  }\n`;\n\nconst TagHeader = styled.span`\n  display: block;\n  fontSize: 1.5rem;\n  margin: 2rem auto;\n  text-align: center;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 auto;\n  }\n`;\n\nconst TagsLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  border-bottom: 2px solid black;\n  transition: border-bottom 0.3s ease 0s;\n  color: black;\n  text-align: center;\n  font-size: 1.75rem;\n\n  &:hover {\n    color: #828282;\n    border-bottom: transparent;\n  }\n`;\n\nconst InnerContainer = styled.div`\n  border-radius: 10px;\n  width: 90%;\n  height: auto;\n  padding: 3rem 0;\n  margin: 0 auto;\n  background: rgba(255, 255, 255, 0.7);\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\n// export const pageQuery = graphql`\n//   query IndexQuery {\n//     allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n//       edges {\n//         node {\n//           excerpt(pruneLength: 250)\n//           id\n//           frontmatter {\n//             title\n//             date(formatString: \"MMMM DD, YYYY\")\n//             path\n//             tags\n//           }\n//         }\n//       }\n//     }\n//   }\n// `;\n","import React from \"react\"\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NavLayout from '../components/NavLayout';\nimport BlogLayout from \"../components/Blog/BlogLayout\";\nimport BlogIndex from '../components/Blog/BlogIndex';\nimport SEO from \"../components/seo\"\n\nconst Learning = () => {\n  const data = useStaticQuery(graphql`\n    query MyBlogPosts {\n      allMarkdownRemark {\n        edges {\n          node {\n            html\n            frontmatter {\n              title\n              tags\n              path\n              date(formatString: \"MMMM DD, YYYY\")\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const postData = data.allMarkdownRemark.edges.map(({ node }) => {\n    const contentPreview = node.html.slice(3, 150) + '...';\n    const reg = new RegExp('<br>', 'g');\n    const excerpt = contentPreview.replace(reg, ' ');\n\n    return {\n      ...node,\n      key: uuidv4(),\n      excerpt: excerpt,\n    }\n  });\n\n  return (\n    <NavLayout layout={'blog'}>\n      <BlogLayout>\n        <SEO title=\"Learn about the Best Full-stack Tech with the Stoic Programmer | BZWEB\" />\n        \n        <BlogIndex data={postData} />\n      </BlogLayout>\n    </NavLayout>\n  )\n}\n\nexport default Learning;\n"],"sourceRoot":""}