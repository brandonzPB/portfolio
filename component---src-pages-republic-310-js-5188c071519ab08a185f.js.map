{"version":3,"sources":["webpack://portfolio_blog/./src/components/Project.js","webpack://portfolio_blog/./src/components/ProjectFooter.js","webpack://portfolio_blog/./src/components/styles/GlobalStyle.js","webpack://portfolio_blog/./src/pages/Republic_310.js"],"names":["title","details","stack","link","sourceCode","purpose","tech","lessons","data","alt1","alt2","icon","stackComponents","map","index","key","className","style","display","thumbnail","src","fluid","alt","screenshot","ProjectContainer","HeaderContainer","DetailsContainer","ListContainer","LinkContainer","href","target","rel","Thumbnail","id","ImageContainer","Screenshot","StoryContainer","PurposeContainer","TechContainer","LessonsContainer","styled","Img","otherA","otherB","images","useStaticQuery","allFile","edges","reduce","array","img","console","log","node","name","push","childImageSharp","FooterContainer","FooterHeadline","FooterContent","ProjectAnchor","to","ProjectThumbnail","ProjectTitle","ProjectLink","Link","GlobalStyle","createGlobalStyle","sort","a","b","reverse","theme"],"mappings":"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","file":"component---src-pages-republic-310-js-5188c071519ab08a185f.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport 'fontsource-roboto';\n\nimport { CgPokemon } from 'react-icons/cg';\nimport { FaPeace } from 'react-icons/fa';\nimport { GiBattleship, GiPalmTree } from 'react-icons/gi';\n\nconst Project = ({ title, details, stack, link, sourceCode, purpose, tech, lessons, data, alt1, alt2, icon }) => {\n  const stackComponents = stack.map((tech, index) => {\n    return (\n      <li key={index}>\n        <CgPokemon className=\"list-o\" style={{ display: icon === 'creatures' ? 'inline-block' : 'none' }} />\n        <FaPeace className=\"list-o\" style={{ display: icon === 'mindful' ? 'inline-block' : 'none' }} />\n        <GiBattleship className=\"list-o\" style={{ display: icon === 'battleship' ? 'inline-block' : 'none' }} />\n        <GiPalmTree className=\"list-o\" style={{ display: icon === 'republic' ? 'inline-block' : 'none'} } />\n        {tech}\n      </li>\n    )\n  });\n\n  const thumbnail = {\n    src: data[1].src,\n    fluid: data[1].fluid,\n    alt: alt1\n  };\n\n  const screenshot = {\n    src: data[0].src,\n    fluid: data[0].fluid,\n    alt: alt2\n  };\n  \n  return (\n    <ProjectContainer>\n      \n      <HeaderContainer>\n        <h1>{title}</h1>\n        <p>{details}</p>\n      </HeaderContainer>\n\n      <DetailsContainer>\n        <ListContainer>\n          <h1>Technologies Used</h1>\n          <ul>\n            {stackComponents}\n          </ul>\n        </ListContainer>\n        \n        <LinkContainer>\n          <a href={link} target=\"_blank\" rel=\"noreferrer\">\n            <Thumbnail src={thumbnail.src} fluid={thumbnail.fluid} alt={thumbnail.alt} />\n          </a>\n          <a href={link} target=\"_blank\" rel=\"noreferrer\" style={{ display: link === '#' ? 'none' : 'inline-block' }}>\n            <span id=\"project-link\">View Live</span>\n          </a>\n          <a href={sourceCode} target=\"_blank\" rel=\"noreferrer\" style={{ display: link === '#' ? 'none' : 'inline-block' }}>\n            <span id=\"source-code\">Source Code</span>\n          </a>\n        </LinkContainer>\n      </DetailsContainer>\n\n      <ImageContainer>\n        <Screenshot\n          fluid={screenshot.fluid}\n          src={screenshot.src}\n          alt={screenshot.alt}>\n        </Screenshot>\n      </ImageContainer>\n\n      <StoryContainer>\n        <PurposeContainer>\n          <h1>Project Inspiration and Purpose</h1>\n          <span id=\"purpose\">{purpose}</span>\n        </PurposeContainer>\n\n        <TechContainer>\n          <h1>The Tech that Made it Happen</h1>\n          <span id=\"tech\">{tech}</span>\n        </TechContainer>\n\n        <LessonsContainer>\n          <h1>Challenges and Lessons</h1>\n          <span id=\"lessons\">{lessons}</span>\n        </LessonsContainer>\n      </StoryContainer>\n    </ProjectContainer>\n  )\n}\n\nexport default Project\n\nconst ProjectContainer = styled.div`\n  display: block;\n  margin: 2rem auto;\n  width: 80%;\n\n  @media screen and (max-width: 500px) {\n    margin: 2rem;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin: 2rem auto;\n  display: block;\n  width: 85%;\n\n  h1 {\n    margin-bottom: 1rem;\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  p {\n    font-family: 'Roboto', sans-serif;\n    width: 70%;\n    line-height: 1.5rem;\n    color: #828282;\n  }\n\n  @media screen and (max-width: 700px) {\n    p {\n      width: 85%;\n    }\n  }\n`\n\nconst DetailsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ListContainer = styled.div`\n  margin: 3rem auto 0 auto;\n  display: block;\n  width: 70%;\n\n  h1 {\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  ul {\n    margin: 2rem auto;\n    display: block;\n    font-family: 'Roboto', sans-serif;\n    color: #828282;\n    width: 90%;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  .list-o {\n    font-size: 1rem;\n    margin-right: 0.5rem;\n    color: #fecc27;\n  }\n`\n\nconst LinkContainer = styled.div`\n  text-align: center;\n  margin: 0 auto;\n  width: 100%;\n\n  a, a:link, a:visited {\n    color: #0070b7;\n    transition: border-bottom 0.3s ease 0;\n    text-decoration: none;\n  }\n\n  #project-link,\n  #source-code {\n    font-size: 1.5rem;\n    padding: 0 5rem;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 700px) {\n    #project-link,\n    #source-code {\n      font-size: 1.3rem;\n      padding: 0 1rem;\n    }\n  }\n\n  a:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48CEF7;\n  }\n`\n\nconst Thumbnail = styled(Img)`\n  display: block;\n  margin: 0 auto 1.5rem auto;\n  border-radius: 5px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  width: 70%;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    margin-bottom: 2.5rem;\n  }\n`\n\nconst ImageContainer = styled.div`\n  margin: 4rem auto;\n  display: block;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`\n\nconst Screenshot = styled(Img)`\n  display: block;\n  margin: 0 auto;\n  width: 75%;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  border-radius: 10px;\n`\n\nconst StoryContainer = styled.div`\n  display: block;\n  margin: 6rem auto;\n  width: 80%;\n\n  h1 {\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n    margin: 2rem auto;\n    display: block;\n  }\n\n  span {\n    font-family: 'Open Sans', sans-serif;\n    color: #828282;\n    width: 60%;\n    max-width: 60%;\n    line-height: 1.5rem;\n  }\n`\n\nconst PurposeContainer = styled.div`\n  margin-bottom: 7rem;\n`\n\nconst TechContainer = styled.div`\n  margin-bottom: 7rem;\n`\n\nconst LessonsContainer = styled.div`\n  margin-bottom: 7rem;\n`","import React from 'react'\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport 'fontsource-roboto';\n\nconst ProjectFooter = ({ otherA, otherB }) => {\n  const data = useStaticQuery(graphql`\n    query AllImagesQuery {\n      allFile(filter: {\n        ext: {\n          regex: \"/(jpg)|(png)|(jpeg)/\"\n        },\n        name: {\n          in: [\"painting-creatures\", \"painting-mindful\", \"painting-battleship\", \"republic310-1\"]\n        }\n      }) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }  \n  `);\n\n  const images = data.allFile.edges.reduce((array, img) => {\n    console.log('img', img);\n    if (img.node.name === otherA.name) {\n\n      array.push({\n        fluid: img.node.childImageSharp.fluid,\n        src: img.node.childImageSharp.fluid.src,\n        link: otherA.link,\n        title: otherA.title,\n        alt: otherA.alt\n      });\n\n    } else if (img.node.name === otherB.name) {\n\n      array.push({\n        fluid: img.node.childImageSharp.fluid,\n        src: img.node.childImageSharp.fluid.src,\n        link: otherB.link,\n        title: otherB.title,\n        alt: otherB.alt\n      });\n\n    }\n    return array;\n  }, []);\n\n  return (\n    <FooterContainer>\n      <FooterHeadline>\n        <h1>Check out my other projects</h1>\n      </FooterHeadline>\n\n      <FooterContent>\n        <ProjectContainer>\n          <ProjectAnchor to={images[0].link}>\n            <ProjectThumbnail \n              fluid={images[0].fluid}\n              src={images[0].src} \n              key={1} \n              alt={images[0].alt}\n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>{images[0].title}</ProjectTitle>\n          <ProjectLink to={images[0].link}>View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to={images[1].link}>\n            <ProjectThumbnail \n              fluid={images[1].fluid}\n              src={images[1].src} \n              key={2} \n              alt={images[1].alt}\n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>{images[1].title}</ProjectTitle>\n          <ProjectLink to={images[1].link}>View Project</ProjectLink>\n        </ProjectContainer>\n      </FooterContent>\n    </FooterContainer>\n  )\n}\n\nexport default ProjectFooter\n\nconst FooterContainer = styled.div`\n  display: block;\n  margin: 0 7rem;\n  width: 85%;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 1rem;\n  }\n`\n\nconst FooterHeadline = styled.div`\n  font-family: 'Playfair Display', sans-serif;\n  color: #36434d;\n  margin: 2rem auto;\n  display: block;\n  width: 90%;\n`\n\nconst FooterContent = styled.div`\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ProjectContainer = styled.div`\n  margin: 2rem auto;\n  display: block;\n  text-align: center;\n  width: 100%;\n  font-family: 'Open Sans', sans-serif;\n  color: #828282;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: 100%;\n    margin: 4rem auto;\n  }\n`\n\nconst ProjectAnchor = styled(Link)`\n`\n\nconst ProjectThumbnail = styled(Img)`\n  width: 25rem;\n  height: 20rem;\n  margin: 0 auto;\n  border-radius: 5px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  transition: transform 0.3s;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: auto;\n  }\n`\n\nconst ProjectTitle = styled.h3`\n  margin: 2rem auto;\n`\n\nconst ProjectLink = styled(Link)`\n  color: #0070b7;\n  transition: border-bottom 0.3s ease 0;\n  text-decoration: none;\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48cef7;\n  }\n`","import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    background-color: #FFF;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport NavBar from '../components/NavBar';\nimport Project from '../components/Project';\nimport ProjectFooter from '../components/ProjectFooter';\nimport Footer from '../components/Footer';\nimport { GlobalStyle } from '../components/styles/GlobalStyle';\n\nconst Republic_310 = () => {\n  const data = useStaticQuery(graphql`\n    query MyRepublicImages {\n      allFile(filter: {ext: {regex: \"/(jpg)|(png)|(jpeg)/\"},\n      name: {in: [\"republic-0\", \"republic310-0\"]}}) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const images = data.allFile.edges.map(img => {\n    return {\n      fluid: img.node.childImageSharp.fluid,\n      src: img.node.childImageSharp.fluid.src,\n    }\n  }).sort((a, b) => {\n    if (a.name > b.name) return -1;\n    else return 1;\n  }).reverse();\n\n  const details = `\n    This is website I made for a startup company.\n    A live version is yet unavailable because\n    we are still waiting for original stock photos, in\n    addition to other areas being finalized. (Once the website\n    is live, this page will be updated!)\n  `;\n\n  const stack = ['React (TypeScript)', 'React Context API', 'CSS', 'NodeJS', 'Express', 'JSONWebTokens', 'bcrypt', 'NoSQL', 'MongoDB'];\n\n  const link = '#';\n\n  const sourceCode = '#';\n\n  const purpose = `\n    The startup company I was working with wanted their own full-stack website, \n    so I used my knowledge to make one for them. I completed this project almost\n    entirely on my own (there was some UX/UI input from a more-experienced developer).\n  `;\n\n  const tech = `\n    I used React to make this project, as well as the same backend combo of Express, MongoDB, and NoSQL.\n    However, I wanted to challenge myself to use something that was completely new to me: TypeScript. \n    Initially, I felt intimidated at seeing the complexity of one's code once it's \"translated\" from JavaScript\n    to clean, effective TypeScript. However, after working with it, seeing its advantages over regular JavaScript,\n    and ultimately learning how to write cleaner code with fewer bugs--I fell in love. Although it's only been\n    a month, imagining myself coding with vanilla JavaScript just feels irresponsible and reckless. (I also got \n      to improve my Photoshop skills with the graphic designing I did for the logos and some labels!)\n  `;\n\n  const lessons = `\n    I've acquired a tremenous amount of wisdom while working on this project. I also\n    got to use some of the knowledge I've acquired since studying data structures and algorithms.\n    I needed a way to sort a variable array of objects by a variable key. Although a simple solution,\n    something I never would've thought of or would have been able to do prior to my studies and rigorous practice was \n    creating a module that uses a quicksort algorithm to sort by the given parameters, along with TypeScript to\n    check for the data types of the different input arrays. \n    Also, I've not only learned a lot about better practices for writing code in a \n    reusable fashion, but also found a wealth of resources to dive into and further my knowledge and ability to work with everything\n    React has to offer. I certainly would not have grown without electing to use TypeScript over JavaScript for this project, nor would\n    I have been directed down a far more grand path of wisdom, knowledge, and practice so soon in my career. The difficulties of learning\n    to use TypeScript have been an absolute blessing.\n  `;\n\n  const alt1 = `The landing page of The Republic 310. The banner is of two female surfers walking along\n    an empty beach, holding surfboards.\n  `;\n\n  const alt2 = 'blank';\n\n  const otherA = {\n    link: '/Creatures_of_Habit',\n    title: 'Creatures of Habit',\n    alt: 'Serene painting of a light blue sky, a grassy field, and the ocean in between',\n    name: 'painting-creatures',\n  };\n\n  const otherB = {\n    link: '/Mindful',\n    title: 'mindful.io',\n    alt: 'Peaceful image with black stones and bamboo in the background',\n    name: 'painting-mindful',\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <NavBar />\n      <Project \n        title=\"The Republic 310\"\n        details={details}\n        stack={stack}\n        link={link}\n        sourceCode={sourceCode}\n        purpose={purpose}\n        tech={tech}\n        lessons={lessons}\n        data={images}\n        alt1={alt1}\n        alt2={alt2}\n        icon=\"republic\"\n      />\n      <ProjectFooter otherA={otherA} otherB={otherB} />\n      <Footer theme={'light'} />\n    </>\n  );\n}\n\nexport default Republic_310;\n"],"sourceRoot":""}