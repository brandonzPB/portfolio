{"version":3,"sources":["webpack://portfolio_blog/./src/assets/images/epictetus.jpg","webpack://portfolio_blog/./src/components/Blog/BlogHeader.js","webpack://portfolio_blog/./src/components/styles/BlogStyle.js","webpack://portfolio_blog/./src/components/Blog/BlogLayout.js","webpack://portfolio_blog/./src/components/Blog/MyIcon.js","webpack://portfolio_blog/./src/components/Blog/PostPreview.js","webpack://portfolio_blog/./src/components/MobileModal.js","webpack://portfolio_blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://portfolio_blog/./src/components/Nav/NavBar.js","webpack://portfolio_blog/./src/components/Nav/NavLayout.js","webpack://portfolio_blog/./src/components/Blog/TagIndex.js","webpack://portfolio_blog/./src/pages/tags.js"],"names":["data","useStaticQuery","stoic","key","fluid","allFile","edges","node","childImageSharp","src","alt","HeaderContainer","WebContainer","style","backgroundImage","epictetus","backgroundSize","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundColor","HeaderTextContainer","HeaderText","className","MobileContainer","Epictetus","MobileText","styled","Img","BlogStyle","createGlobalStyle","children","modalState","map","child","React","uuidv4","useState","status","display","setDisplay","iconRef","useRef","useEffect","current","myIcon","IconContainer","ref","IconLink","to","MyIconImage","Link","post","inTags","setTag","PostPreviewContainer","PostLink","path","title","PostInfo","date","TagContainer","PuzzlePieces","tags","tag","idx","TagLinkContainer","id","ActiveTag","onClick","TagLink","ContentPreviewContainer","excerpt","hideModal","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","ModalContainer","CloseButton","ModalItem","href","showModal","NavBarContainer","NavItem","NavLink","layout","childrenArr","props","setModalState","BlogHeader","BlogFooterContainer","Footer","theme","TagIndex","currentTag","setCurrentTag","tagMap","allMarkdownRemark","reduce","index","frontmatter","tagArr","push","sort","a","b","collection","updated","components","taggedPosts","setTaggedPosts","trim","filteredPosts","filter","contentPreview","html","slice","reg","RegExp","replace","postObj","PostPreview","uuid","updateTagState","useCallback","TagComponents","TagIndexContainer","Helmet","PostHeader","PostsLink","TagContentContainer","NoTagText","AllTags","AllTaggedPosts","NavLayout","BlogLayout"],"mappings":"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","file":"component---src-pages-tags-js-ebf1c2584fbec542bedd.js","sourcesContent":["export default __webpack_public_path__ + \"static/epictetus-2a200291508b52c07e353a19246971d8.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport epictetus from '../../assets/images/epictetus.jpg';\n\nconst BlogHeader = () => {\n  const data = useStaticQuery(graphql`\n    query MyStoic {\n      allFile(filter: {\n        ext: {\n          regex: \"/(jpeg)|(jpg)|(png)/\"\n        }, \n        name: {\n          in: \"epictetus\"\n        }}) {\n          edges {\n            node {\n              childImageSharp {\n                fluid(maxHeight: 1000, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n      }\n    }\n  `);\n\n  const stoic = {\n    key: 0,\n    fluid: data.allFile.edges[0].node.childImageSharp.fluid,\n    src: data.allFile.edges[0].node.childImageSharp.fluid.src,\n    alt: \"Epictetus writing code\"\n  };\n\n  return (\n    <HeaderContainer>\n      <WebContainer style={{ \n        backgroundImage: `url(${epictetus})`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'right center',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: 'transparent',\n      }}>\n        <HeaderTextContainer>\n          <HeaderText>\n            Learn with the Stoic&nbsp; \n            <span className=\"gold-text\">\n              Programmer\n            </span>\n          </HeaderText>\n        </HeaderTextContainer>\n      </WebContainer>\n\n      <MobileContainer>\n        <Epictetus fluid={stoic.fluid} src={stoic.src} alt={stoic.alt} key={0} />\n\n        <MobileText>\n          Learn with the Stoic&nbsp;\n          <span className=\"gold-text\">\n            Programmer\n          </span>\n        </MobileText>\n      </MobileContainer>\n    </HeaderContainer>\n  )\n}\n\nexport default BlogHeader;\n\nconst HeaderContainer = styled.div`\n  width: 80vw;\n  height: 35rem;\n  margin-left: 8.5rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\nconst WebContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.2);\n  height: 100%;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst HeaderTextContainer = styled.div`\n  width: 60%;\n  margin: 0 4rem 0 2rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 1rem;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  margin: 0 auto;\n  font-size: 3.5rem;\n  color: white;\n  text-align: center;\n  font-family: 'Playfair Display', sans-serif;\n\n  .gold-text {\n    color: #fecc27;\n  }\n`;\n\nconst MobileContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: auto;\n\n  @media only screen and (min-width: 700px) {\n    display: none;\n  }\n`;\n\nconst Epictetus = styled(Img)`\n  display: none;\n\n  @media screen and (max-width: 500px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst MobileText = styled.h1`\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 3rem;\n  text-align: center;\n  width: 80%;\n\n  .gold-text {\n    color: #fecc27;\n    display: block;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const BlogStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { BlogStyle } from '../styles/BlogStyle';\n\nimport BlogHeader from './BlogHeader';\nimport Footer from '../Footer';\n\nconst BlogLayout = ({ children, modalState }) => {\n  return (\n    <>\n      <BlogStyle />\n\n      <main>\n        {\n          children.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n    </>\n  )\n}\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default BlogLayout;\n\nconst BlogContainer = styled.div`\n  ${'' /* background: linear-gradient(0.25turn,\n    #FFF,\n    #fff,\n    #fff,\n    #fff,\n    #fff,\n    #ECEBEB,\n    #E7E5E5,\n    #D5D0D2,\n    #C5BFC4,\n    #CECDD5\n  ); */}\n  width: 100%;\n`;\n\nconst BlogFooterContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(100, 100, 100, 0.6);\n  padding: 0.5rem 0;\n`;\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst MyIcon = ({ modalState = null }) => {\n  const data = useStaticQuery(graphql`\n    query MyIcon {\n      allFile(filter: {\n        ext: {\n          regex: \"/png/\"\n        },\n      name: {\n        in: [\"me_3\"]\n      }}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const [display, setDisplay] = useState({ status: true });\n\n  const iconRef = useRef(false);\n\n  useEffect(() => {\n    return () => {\n      iconRef.current = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (modalState !== null && iconRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.display) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, iconRef]);\n\n  const myIcon = data.allFile.edges[0].node.childImageSharp;\n\n  return (\n    <IconContainer \n      style={{\n        display: display.status ? 'inline' : 'none'\n      }}\n      ref={iconRef}\n    >\n      <IconLink to=\"/Brandon\" >\n      <MyIconImage fluid={myIcon.fluid} alt=\"A small picture of me wearing a suit.\" />\n    </IconLink>\n    </IconContainer>\n  )\n}\n\nexport default MyIcon;\n\nconst IconContainer = styled.div``;\n\nconst IconLink = styled(Link)``;\n\nconst MyIconImage = styled(Img)`\n  width: 25px;\n  display: inline-block;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { HiPuzzle } from 'react-icons/hi';\n\nimport MyIcon from './MyIcon';\n\nconst PostPreview = ({ post, inTags = false, setTag, modalState, }) => {\n  return (\n    <PostPreviewContainer>\n      <PostLink to={post.path}>{post.title}</PostLink>\n      \n      <PostInfo>\n        Posted by Brandon&nbsp;\n        <MyIcon modalState={modalState} />\n        &nbsp;on {post.date}\n      </PostInfo>\n\n      <TagContainer>\n        {\n          inTags\n            ? <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <ActiveTag onClick={() => setTag(tag)}>{tag}</ActiveTag>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n            : <PuzzlePieces>\n              {\n                post.tags.map((tag, idx) => {\n                  return (\n                    <TagLinkContainer key={idx}>\n                      <HiPuzzle id=\"puzzle\" />\n                      <TagLink to=\"/tags\">{tag}</TagLink>\n                    </TagLinkContainer>\n                  )\n                })\n              }\n            </PuzzlePieces>\n        }\n      </TagContainer>\n\n      <ContentPreviewContainer>\n        {post.excerpt}\n      </ContentPreviewContainer>\n    </PostPreviewContainer>\n  )\n}\n\nexport default PostPreview;\n\nconst PostPreviewContainer = styled.div`\n  display: block;\n  margin: 0 auto;\n  width: 60%;\n  text-align: left;\n  margin: 2rem auto;\n  height: auto;\n  \n  @media screen and (max-width: 500px) {\n    margin: 1rem auto;\n    width: 80%;\n  }\n`;\n\nconst PostLink = styled(Link)`\n  text-decoration: none;\n  font-size: 2.25rem;\n  border-bottom: 2px solid #0070B7;\n  color: #0070B7;\n  margin: 1rem auto;\n  font-family: 'Roboto', sans-serif;\n  transition: border-bottom 0.2s ease;\n\n  &:link, &:visited {\n    color: #0070B7;\n  }\n\n  &:hover {\n    border-bottom: none;\n    color: #95BCDE;\n  }\n`;\n\nconst PostInfo = styled.div`\n  display: block;\n  margin: 0.5rem auto;\n`;\n\nconst TagContainer = styled.div`\n  display: block;\n  margin: 1rem auto;\n`;\n\nconst PuzzlePieces = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst TagLinkContainer = styled.div`\n  border: 1px solid #0070b7;\n  border-radius: 5px;\n  padding: 0.25rem 0;\n  text-align: center;\n  width: 7rem;\n\n  &:hover {\n    color: #5ED3F3;\n    border-color: #5ED3F3;\n  }\n\n  #puzzle {\n    font-size: 0.75rem;\n    color: #0070b7;\n  }\n\n  #puzzle:hover {\n    color: #5ed3f3;\n  }\n`;\n\nconst ActiveTag = styled.span`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  color: #0070b7;\n  font-size: 0.75rem;\n  margin: 0 0.25rem;\n\n  &:active, &:link {\n    color: #0070b7;\n  }\n\n  &:hover {\n    color: #5ED3F3;\n  }\n`;\n\nconst ContentPreviewContainer = styled.div`\n  display: block;\n`;\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link, } from 'gatsby';\nimport { ImCross } from 'react-icons/im';\nimport 'fontsource-roboto';\n\nconst MobileModal = ({ hideModal, ...props }) => {\n  return (\n    <ModalContainer>\n      <CloseButton onClick={hideModal}>\n        <ImCross id=\"icon\" />\n      </CloseButton>\n\n      <ModalItem>\n        <Link to=\"/\">PORTFOLIO</Link>\n      </ModalItem>\n      <ModalItem>\n        <Link to=\"/learn\">BLOG</Link>\n      </ModalItem>\n      <ModalItem>\n        <a href=\"/#skills\">SKILLS & PROJECTS</a>\n      </ModalItem>\n      <ModalItem>\n        <a href=\"/#footer\">CONTACT</a>\n      </ModalItem>\n    </ModalContainer>\n  )\n}\n\nexport default MobileModal;\n\nconst ModalContainer = styled.div`\n  @keyframes slidein {\n    from {\n      transform: translateX(120rem);\n    }\n\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  position: fixed;\n  top: 3rem;\n  right: 0;\n  margin: 0 auto;\n  z-index: 4;\n  height: 90vh;\n  width: 90vw;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  animation: slidein 0.2s ease;\n`;\n\nconst ModalBackground = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst CloseButton = styled.div`\n  text-align: center;\n  background: none;\n  margin: 4rem auto;\n  width: 85%;\n  text-align: right;\n\n  #icon {\n    font-size: 2.25rem;\n  }\n`;\n\nconst ModalItem = styled.span`\n  font-size: 2.5rem;\n  font-family: 'Roboto', sans-serif;\n  margin: 2.5rem auto;\n  text-align: center;\n  display: block;\n  text-decoration: none;\n  font-weight: 600;\n  color: black;\n\n  a,\n  a:visited,\n  a:active {\n    color: black;\n    text-decoration: none;\n  }\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport 'fontsource-roboto';\n\nimport MobileModal from '../MobileModal';\n\nconst NavBar = ({ hideModal, modalState, showModal }) => {\n  return (\n    <NavBarContainer>\n      <WebContainer>\n        <NavItem>\n          <NavLink to=\"/\">PORTFOLIO</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/learn\">BLOG</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/#skills\">SKILLS</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/#projects\">PROJECTS</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/#footer\">CONTACT</NavLink>\n        </NavItem>\n      </WebContainer>\n\n      <MobileContainer>\n        <GiHamburgerMenu id=\"icon\" onClick={showModal} />\n        \n        <ModalContainer \n          style={{ \n            display: modalState.display ? 'block' : 'none' \n          }}\n        >\n          <MobileModal \n            hideModal={hideModal}\n          />\n        </ModalContainer>\n      </MobileContainer>\n    </NavBarContainer>\n  )\n}\n\nexport default NavBar;\n\nconst NavBarContainer = styled.div`\n  width: 8rem;\n  height: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  left: 0.5rem;\n\n  @media screen and (max-width: 500px) {\n    width: 10rem;\n    position: absolute;\n  }\n`;\n\nconst WebContainer = styled.div`\n  border-right: 1px solid black;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst NavItem = styled.div`\n  margin: 1rem 2rem;\n  text-decoration: none;\n  display: block;\n`;\n\nconst NavLink = styled(Link)`\n  color: black;\n  opacity: 0.5;\n  transition: border-bottom 0.3s ease 0s;\n  text-decoration: none;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n  font-size: 0.75rem;\n\n  &:visited, {\n    color: #0070b7;\n  }\n\n  &:active, &:focus {\n    color: black;\n    opacity: 1;\n  }\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48cef7; \n  }\n`;\n\nconst MobileContainer = styled.div`\n  float: right;\n  position: fixed;\n  right: 2rem;\n  top: 6rem;\n\n  #icon {\n    font-size: 2rem;\n  }\n  \n  @media screen and (min-width: 900px) {\n    display: none;\n\n    #icon {\n      display: none;\n    }\n  }\n`;\n\nconst ModalContainer = styled.div`\n  @keyframes slideout {\n    from {\n      transform: translateX(0);\n    }\n\n    to {\n      transform: translateX(120rem);\n    }\n  }\n\n  .hide-modal {\n    animation: slideout 0.2s ease;\n  }\n\n  @media screen and (min-width: 900px) {\n    display: none;\n  }\n`;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NavBar from './NavBar';\nimport BlogHeader from '../Blog/BlogHeader';\nimport Footer from '../Footer';\n\nconst NavLayout = ({ children, layout }) => {\n  const childrenArr = children.props\n    ? children.props.children\n    : children;\n\n  const [modalState, setModalState] = useState({ display: false });\n\n  // SHOW MODAL MENU\n  const showModal = () => {\n    if (modalState.display) return;\n\n    setModalState({ display: true });\n  }\n\n  // HIDE MODAL MENU\n  const hideModal = () => {\n    if (!modalState.display) return;\n\n    setModalState({ display: false });\n  }\n\n  return (\n    <>\n      <NavBar \n        hideModal={hideModal}\n        modalState={modalState}\n        showModal={showModal}\n      />\n\n      {\n        layout === 'blog'\n          ? <BlogHeader />\n          : <></>\n      }\n\n      <main>\n        {\n          childrenArr.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n\n      {\n        layout === 'blog'\n          ? <BlogFooterContainer>\n            <Footer theme={'dark'} />\n          </BlogFooterContainer>\n          : <Footer theme={'light'} />\n      }\n    </>\n  )\n}\n\nexport default NavLayout;\n\nconst BlogFooterContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(100, 100, 100, 0.6);\n  padding: 0.5rem 0;\n`;","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { v4 as uuid } from 'uuid';\nimport { HiPuzzle } from 'react-icons/hi';\n\nimport PostPreview from './PostPreview';\n\nexport default function TagIndex({ data, modalState }) {\n  const [currentTag, setCurrentTag] = useState({ title: '' });\n\n  // reduce data to map of tags\n  const tagMap = data.allMarkdownRemark.edges.reduce((map, {node}) => {\n    for (const index in node.frontmatter.tags) {\n      const tag = node.frontmatter.tags[index];\n      if (!(tag in map)) map[tag] = tag;\n    }\n    return map;\n  }, {});\n\n  let tagArr = [];\n\n  // push each tag to tagArr\n  for (const tag in tagMap) {\n    tagArr.push(tag);\n  }\n\n  // sort tags in alphabetical order; not many tags,\n  // so optimization is not an issue here\n  tagArr = tagArr.sort((a, b) => a - b);\n\n  const [taggedPosts, setTaggedPosts] = useState({\n    collection: data.allMarkdownRemark.edges.map(({ node }) => {\n      return { ...node, }\n    }),\n    updated: false,\n    components: []\n  });\n\n  // UPDATES ON TAG FILTER UPDATE\n  useEffect(() => {\n    // no tag change (\"null\" case)\n    if (taggedPosts.updated) return;\n\n    // no tag (reset to all posts)\n    if (!currentTag.title.trim()) {\n      return setTaggedPosts({\n        ...taggedPosts, \n        collection: data.allMarkdownRemark.edges.map(({ node }) => {\n          return { ...node, }\n        }),\n        updated: true\n      });\n    }\n\n    // filter data down to array of posts with current tag\n    const filteredPosts = data.allMarkdownRemark.edges.filter(({ node }) => {\n      return node.frontmatter.tags.indexOf(currentTag.title) > -1;\n    });\n\n    const components = filteredPosts.map(post => {\n      // create content preview by getting slice of post HTML\n      const contentPreview = post.node.html.slice(3, 150) + '...';\n      const reg = new RegExp('<br>', 'g');\n      const excerpt = contentPreview.replace(reg, ' ');\n\n      // reduce PostPreview props\n      const postObj = {\n        title: post.node.frontmatter.title,\n        date: post.node.frontmatter.date,\n        path: post.node.frontmatter.path,\n        tags: post.node.frontmatter.tags,\n        excerpt: excerpt,\n      }\n  \n      return (\n        <PostPreview \n          post={postObj}\n          key={uuid()}\n          inTags={true}\n          setTag={updateTagState}\n          modalState={modalState}\n        />\n      )\n    });\n    \n    // set taggedPosts to filtered array\n    return setTaggedPosts({\n      ...taggedPosts,\n      collection: filteredPosts.slice(),\n      updated: true,\n      components: components.slice()\n    });\n  }, [currentTag, taggedPosts, setTaggedPosts]);\n\n  // UPDATE TAG STATE\n  const updateTagState = useCallback((tag) => {\n    setCurrentTag({ ...currentTag, title: tag });\n    setTaggedPosts({ ...taggedPosts, updated: false });\n  }, [setTaggedPosts, setCurrentTag]);\n\n  // TAG COMPONENTS\n  const TagComponents = tagArr.map((tag, index) => (\n    <li key={index} className=\"tag-list-item\">\n      <HiPuzzle id=\"puzzle\" />\n      <span \n        className=\"tag-list-text\" \n        onClick={() => updateTagState(tag)}\n      >\n        {tag}\n      </span>\n    </li>\n  ));\n\n  return (\n    <TagIndexContainer>\n      <Helmet title={`The Stoic Programmer | Tags`} />\n\n      <PostHeader>\n        <PostsLink to=\"/learn\">Browse Posts</PostsLink>\n      </PostHeader>\n      \n      <TagContentContainer>\n        <NoTagText style={{ display: currentTag.title.trim() ? 'none' : 'block' }}>\n          Click on a Tag to Filter the Posts!\n        </NoTagText>\n\n        <AllTags>{TagComponents}</AllTags>\n\n        <AllTaggedPosts>\n          {taggedPosts.components}\n        </AllTaggedPosts>\n      </TagContentContainer>\n    </TagIndexContainer>\n  )\n}\n\nconst TagIndexContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.5);\n  height: auto;\n  padding: 2rem 0;\n`;\n\nconst TagContentContainer = styled.div`\n  margin: 2rem auto 4rem auto;\n  width: 80%;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding-bottom: 2.5rem;\n`;\n\nconst PostHeader = styled.div`\n  display: block;\n  fontSize: 1.5rem;\n  margin: 2rem auto;\n  text-align: center;\n`;\n\nconst PostsLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  border-bottom: 2px solid black;\n  transition: border-bottom 0.3s ease 0s;\n  color: black;\n  text-align: center;\n  font-size: 1.75rem;\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: transparent;\n  }\n`;\n\nconst NoTagText = styled.span`\n  margin: 2rem auto 0 auto;\n  text-align: center;\n  font-size: 1.25rem;\n`;\n\nconst AllTags = styled.div`\n  @keyframes jiggle {\n    0% {\n      transform: rotate(10deg);\n    }\n\n    20% {\n      transform: rotate(-10deg);\n    }\n\n    40% {\n      transform: rotate(10deg);\n    }\n\n    60% {\n      transform: rotate(-10deg);\n    }\n\n    80% {\n      transform: rotate(10deg);\n    }\n\n    100% {\n      transform: rotate(-10deg);\n    }\n  }\n\n  max-width: 70%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  flex-wrap: wrap;\n  margin: 2rem auto;\n\n  .tag-list-item {\n    list-style-type: none;\n    margin: 0 auto 0 3rem;\n    width: 26%;\n    font-weight: 600;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: black;\n  }\n\n  .tag-list-item:hover {\n    color: #828282;\n  }\n\n  #puzzle {\n    color: #fecc27;\n    animation: jiggle 0.5s ease-out 0s alternate once;\n    background: none;\n    margin-right: 0.5rem;\n    margin-top: 0.75rem;\n  }\n\n  #puzzle:hover {\n    animation: jiggle 0.2s;\n  }\n`;\n\nconst AllTaggedPosts = styled.div`\n  margin: 2rem auto;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport NavLayout from '../components/Nav/NavLayout';\nimport BlogLayout from '../components/Blog/BlogLayout';\nimport SEO from '../components/seo';\nimport TagIndex from '../components/Blog/TagIndex';\n\nconst Tags = () => {\n  const data = useStaticQuery(graphql`\n    query MyTags {\n      allMarkdownRemark {\n        edges {\n          node {\n            html\n            frontmatter {\n              tags\n              path\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <NavLayout layout={'blog'}>\n      <BlogLayout>\n        <SEO title=\"Browse topics | the Stoic Programmer\" />\n        <TagIndex data={data} />\n      </BlogLayout>\n    </NavLayout>\n  )\n}\n\nexport default Tags;\n"],"sourceRoot":""}