{"version":3,"sources":["webpack://portfolio_blog/./src/assets/images/epictetus.jpg","webpack://portfolio_blog/./src/components/Blog/BlogHeader.js","webpack://portfolio_blog/./src/components/MobileModal.js","webpack://portfolio_blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://portfolio_blog/./src/components/NavBar.js","webpack://portfolio_blog/./src/components/NavLayout.js","webpack://portfolio_blog/./src/components/layout.js","webpack://portfolio_blog/./src/components/styles/GlobalStyle.js","webpack://portfolio_blog/./src/components/Header.js","webpack://portfolio_blog/./src/components/SkillsList.js","webpack://portfolio_blog/./src/components/ProjectList.js","webpack://portfolio_blog/./src/components/Body.js","webpack://portfolio_blog/./src/pages/index.js"],"names":["data","useStaticQuery","stoic","key","fluid","allFile","edges","node","childImageSharp","src","alt","HeaderContainer","WebContainer","style","backgroundImage","epictetus","backgroundSize","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundColor","HeaderTextContainer","HeaderText","className","MobileContainer","Epictetus","MobileText","styled","Img","hideModal","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","ModalContainer","CloseButton","onClick","id","ModalItem","Link","to","href","modalState","showModal","console","log","NavBarContainer","NavItem","NavLink","display","children","layout","childrenArr","props","useState","setModalState","BlogHeader","map","child","React","uuidv4","BlogFooterContainer","Footer","theme","GlobalStyle","createGlobalStyle","status","setDisplay","headerRef","useRef","useEffect","current","banner","HeaderContent","TextContainer","ImageContainer","ref","Image","DetailsContainer","ColOne","ColTwo","SkillsListContainer","paintings","sort","a","b","name","projectRef","dipslay","ProjectListContainer","ProjectsList","ProjectContainer","ProjectAnchor","ProjectThumbnail","ProjectTitle","ProjectDetails","ProjectLink","bodyRef","BodyContainer","SkillsContainer","ProjectSection","NavLayout","title"],"mappings":"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","file":"component---src-pages-index-js-2f57692520d03824578a.js","sourcesContent":["export default __webpack_public_path__ + \"static/epictetus-2a200291508b52c07e353a19246971d8.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\nimport epictetus from '../../assets/images/epictetus.jpg';\n\nconst BlogHeader = () => {\n  const data = useStaticQuery(graphql`\n    query MyStoic {\n      allFile(filter: {\n        ext: {\n          regex: \"/(jpeg)|(jpg)|(png)/\"\n        }, \n        name: {\n          in: \"epictetus\"\n        }}) {\n          edges {\n            node {\n              childImageSharp {\n                fluid(maxHeight: 1000, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n      }\n    }\n  `);\n\n  const stoic = {\n    key: 0,\n    fluid: data.allFile.edges[0].node.childImageSharp.fluid,\n    src: data.allFile.edges[0].node.childImageSharp.fluid.src,\n    alt: \"Epictetus writing code\"\n  };\n\n  return (\n    <HeaderContainer>\n      <WebContainer style={{ \n        backgroundImage: `url(${epictetus})`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'right center',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: 'transparent',\n      }}>\n        <HeaderTextContainer>\n          <HeaderText>\n            Learn with the Stoic&nbsp; \n            <span className=\"gold-text\">\n              Programmer\n            </span>\n          </HeaderText>\n        </HeaderTextContainer>\n      </WebContainer>\n\n      <MobileContainer>\n        <Epictetus fluid={stoic.fluid} src={stoic.src} alt={stoic.alt} key={0} />\n\n        <MobileText>\n          Learn with the Stoic&nbsp;\n          <span className=\"gold-text\">\n            Programmer\n          </span>\n        </MobileText>\n      </MobileContainer>\n    </HeaderContainer>\n  )\n}\n\nexport default BlogHeader;\n\nconst HeaderContainer = styled.div`\n  width: 80vw;\n  height: 35rem;\n  margin-left: 8.5rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\nconst WebContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.2);\n  height: 100%;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst HeaderTextContainer = styled.div`\n  width: 60%;\n  margin: 0 4rem 0 2rem;\n\n  @media screen and (max-width: 500px) {\n    margin: 0 1rem;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  margin: 0 auto;\n  font-size: 3.5rem;\n  color: white;\n  text-align: center;\n  font-family: 'Playfair Display', sans-serif;\n\n  .gold-text {\n    color: #fecc27;\n  }\n`;\n\nconst MobileContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: auto;\n\n  @media only screen and (min-width: 700px) {\n    display: none;\n  }\n`;\n\nconst Epictetus = styled(Img)`\n  display: none;\n\n  @media screen and (max-width: 500px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst MobileText = styled.h1`\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 3rem;\n  text-align: center;\n  width: 80%;\n\n  .gold-text {\n    color: #fecc27;\n    display: block;\n  }\n`;\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link, } from 'gatsby';\nimport { ImCross } from 'react-icons/im';\nimport 'fontsource-roboto';\n\nconst MobileModal = ({ hideModal, ...props }) => {\n  return (\n    <ModalContainer>\n      <CloseButton onClick={hideModal}>\n        <ImCross id=\"icon\" />\n      </CloseButton>\n\n      <ModalItem>\n        <Link to=\"/\">PORTFOLIO</Link>\n      </ModalItem>\n      <ModalItem>\n        <Link to=\"/learn\">BLOG</Link>\n      </ModalItem>\n      <ModalItem>\n        <a href=\"/#skills\">SKILLS & PROJECTS</a>\n      </ModalItem>\n      <ModalItem>\n        <a href=\"/#footer\">CONTACT</a>\n      </ModalItem>\n    </ModalContainer>\n  )\n}\n\nexport default MobileModal;\n\nconst ModalContainer = styled.div`\n  @keyframes slidein {\n    from {\n      transform: translateX(120rem);\n    }\n\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  position: fixed;\n  top: 3rem;\n  right: 0;\n  margin: 0 auto;\n  z-index: 4;\n  height: 90vh;\n  width: 90vw;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  animation: slidein 0.2s ease;\n`;\n\nconst ModalBackground = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst CloseButton = styled.div`\n  text-align: center;\n  background: none;\n  margin: 4rem auto;\n  width: 85%;\n  text-align: right;\n\n  #icon {\n    font-size: 2.25rem;\n  }\n`;\n\nconst ModalItem = styled.span`\n  font-size: 2.5rem;\n  font-family: 'Roboto', sans-serif;\n  margin: 2.5rem auto;\n  text-align: center;\n  display: block;\n  text-decoration: none;\n  font-weight: 600;\n  color: black;\n\n  a,\n  a:visited,\n  a:active {\n    color: black;\n    text-decoration: none;\n  }\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport 'fontsource-roboto';\nimport MobileModal from './MobileModal';\n\nconst NavBar = ({ hideModal, modalState, showModal }) => {\n  console.log('modalState', modalState);\n  \n  return (\n    <NavBarContainer>\n      <WebContainer>\n        <NavItem>\n          <NavLink to=\"/\">PORTFOLIO</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/learn\">BLOG</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/#skills\">SKILLS</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/#projects\">PROJECTS</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/#footer\">CONTACT</NavLink>\n        </NavItem>\n      </WebContainer>\n\n      <MobileContainer>\n        <GiHamburgerMenu id=\"icon\" onClick={showModal} />\n        \n        <ModalContainer \n          style={{ \n            display: modalState.display ? 'block' : 'none' \n          }}\n        >\n          <MobileModal \n            hideModal={hideModal}\n          />\n        </ModalContainer>\n      </MobileContainer>\n    </NavBarContainer>\n  )\n}\n\nexport default NavBar;\n\nconst NavBarContainer = styled.div`\n  width: 8rem;\n  height: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  left: 0.5rem;\n\n  @media screen and (max-width: 500px) {\n    width: 10rem;\n    position: absolute;\n  }\n`;\n\nconst WebContainer = styled.div`\n  border-right: 1px solid black;\n\n  @media screen and (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst NavItem = styled.div`\n  margin: 1rem 2rem;\n  text-decoration: none;\n  display: block;\n`;\n\nconst NavLink = styled(Link)`\n  color: black;\n  opacity: 0.5;\n  transition: border-bottom 0.3s ease 0s;\n  text-decoration: none;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n  font-size: 0.75rem;\n\n  &:visited, {\n    color: #0070b7;\n  }\n\n  &:active, &:focus {\n    color: black;\n    opacity: 1;\n  }\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48cef7; \n  }\n`;\n\nconst MobileContainer = styled.div`\n  float: right;\n  position: fixed;\n  right: 2rem;\n  top: 6rem;\n\n  #icon {\n    font-size: 2rem;\n  }\n  \n  @media screen and (min-width: 900px) {\n    display: none;\n\n    #icon {\n      display: none;\n    }\n  }\n`;\n\nconst ModalContainer = styled.div`\n  @keyframes slideout {\n    from {\n      transform: translateX(0);\n    }\n\n    to {\n      transform: translateX(120rem);\n    }\n  }\n\n  .hide-modal {\n    animation: slideout 0.2s ease;\n  }\n\n  @media screen and (min-width: 900px) {\n    display: none;\n  }\n`;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NavBar from './NavBar';\nimport BlogHeader from './Blog/BlogHeader';\nimport Footer from './Footer';\n\nconst NavLayout = ({ children, layout }) => {\n  const childrenArr = children.props\n    ? children.props.children\n    : children;\n\n  const [modalState, setModalState] = useState({ display: false });\n\n  // SHOW MODAL MENU\n  const showModal = () => {\n    if (modalState.display) return;\n\n    setModalState({ display: true });\n  }\n\n  // HIDE MODAL MENU\n  const hideModal = () => {\n    if (!modalState.display) return;\n\n    setModalState({ display: false });\n  }\n\n  return (\n    <>\n      <NavBar \n        hideModal={hideModal}\n        modalState={modalState}\n        showModal={showModal}\n      />\n\n      {\n        layout === 'blog'\n          ? <BlogHeader />\n          : <></>\n      }\n\n      <main>\n        {\n          childrenArr.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n\n      {\n        layout === 'blog'\n          ? <BlogFooterContainer>\n            <Footer theme={'dark'} />\n          </BlogFooterContainer>\n          : <Footer theme={'light'} />\n      }\n    </>\n  )\n}\n\nexport default NavLayout;\n\nconst BlogFooterContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: rgba(100, 100, 100, 0.6);\n  padding: 0.5rem 0;\n`;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport Footer from './Footer';\n\nconst Layout = ({ children, modalState }) => {\n  return (\n    <>\n      <GlobalStyle />\n\n      <main>\n        {\n          children.map(child => {\n            return React.cloneElement(\n              child,\n              {\n                key: uuidv4(),\n                modalState\n              }\n            )\n          })\n        }\n      </main>\n\n      <Footer theme=\"light\" />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;","import { createGlobalStyle } from 'styled-components';\n\n/*\neggshell: fbfaf1\nmint cream: F4FFF8\ngold: fecc27\nblue: 0070b7\ngray: 828282\ndark gray: 36434d\n*/\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    background-color: #FFF;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`","import Img from 'gatsby-image';\nimport React, { useState, useEffect, useRef } from \"react\"\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\n\nconst Header = ({ modalState }) => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: {ext: {regex: \"/(jpg)|(png)|(jpeg)/\"}, name: {in: \"me\"}}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxHeight: 1000, quality: 90) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }  \n  `);\n\n  const [display, setDisplay] = useState({ status: true });\n\n  const headerRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      headerRef.current = false;\n    }\n  }, [headerRef]);\n\n  useEffect(() => {\n    if (headerRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.display) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, headerRef]);\n\n  const banner = {\n    key: 0,\n    fluid: data.allFile.edges[0].node.childImageSharp.fluid,\n    src: data.allFile.edges[0].node.childImageSharp.fluid.src,\n  };\n\n  return (\n    <HeaderContainer>\n      <HeaderContent>\n        <TextContainer>\n          <div id=\"desktop\">\n            <h3>Oh hello, I'm Brandon.</h3>\n            <h3>Software <span className=\"gold-text\">Developer</span></h3>\n            <h3>and Life-Long Learner</h3>\n          </div>\n          <div id=\"mobile\">\n            <h3>Oh hello, I'm Brandon.</h3>\n            <h3>Software <span className=\"gold-text\">Developer</span></h3>\n            <h3>and Life-Long Learner</h3>\n          </div>\n        </TextContainer>\n\n        <ImageContainer style={{ display: display.status ? 'block': 'none' }} ref={headerRef}>\n          <Image fluid={banner.fluid} alt=\"Picture of me (a bald man) in a suit\" />\n        </ImageContainer>\n\n        <DetailsContainer>         \n          <ColOne>\n            <p>\n              I am a 22 year-old passionate Stoic who loves using code to create solutions and build useful, elegant, and enjoyable experiences. <br/><br/>\n              To me, code is like an infinite pile of legos with each piece being made at the will of my imagination. (inspired by V. Anton Spraul)\n            </p>\n          </ColOne>\n\n          <ColTwo>\n            <p>\n              Aside from studying economics and data science at UCLA, \n              I've used most of my free time to study, practice, and build as much as I possibly can with code.\n            </p>\n          </ColTwo>\n        </DetailsContainer>\n      </HeaderContent>\n    </HeaderContainer>\n  )\n}\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n  margin: 3rem auto 0 auto;\n  display: block;\n  text-align: center;\n  width: 70%;\n  z-index: 2;\n\n  @media screen and (max-width: 500px) {\n    width: 80%;\n  }\n`\n\nconst HeaderContent = styled.div`\n  @media screen and (max-width: 500px) {\n    margin: 5rem auto;\n    border: 2px solid transparent;\n  }\n`\n\nconst TextContainer = styled.div`\n  @keyframes fadein {\n    from {\n      opacity: 0;\n      translateY(-30px);\n    }\n\n    to {\n      opacity: 1;\n      translateY(30px);\n    }\n  }\n\n  text-align: left;\n  margin: 0 2rem;\n  font-size: 2rem;\n  font-family: 'Playfair Display', sans-serif;\n  color: #36434d;\n\n  h3 {\n    animation: fadein 2s;\n    margin: 0 auto;\n  }\n\n  #mobile {\n    display: none;\n  }\n\n  .gold-text {\n    color: #fecc27;\n  }\n\n  @media screen and (max-width: 700px) {\n    font-size: 1.25rem;\n    margin: 3rem auto;\n    width: auto;\n\n    #desktop {\n      display: none;\n    }\n\n    #mobile {\n      display: block;\n      width: 110%;\n      padding: 0;\n    }\n  }\n`\n\nconst ImageContainer = styled.div`\n  display: block;\n  margin: 2rem auto;\n\n  h3 {\n    font-size: 0.75rem;\n    color: #828282;\n    font-family: 'Open Sans', sans-serif;\n  }\n`\n\nconst Image = styled(Img)`\n  height: 50%;\n  width: 50%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`\n\nconst DetailsContainer = styled.div`\n  margin: 2rem auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: 100%;\n  color: #828282;\n\n  @media screen and (max-width: 700px) {\n    grid-template-columns: 1fr;\n    font-size: 1.25rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    flex-wrap: wrap;\n    flex: 1;\n    text-align: left;\n  }\n`\n\nconst ColOne = styled.div`\n  display: block;\n  margin: 0 auto;\n  height: 100%;\n  padding: 0 2rem;\n  line-height: 1.5rem;\n  font-family: 'Open Sans', sans-serif;\n  text-align: left;\n\n  @media screen and (max-width: 700px) {\n    padding: 0;\n    width: 100%;\n  }\n`\n\nconst ColTwo = styled.div`\n  display: block;\n  margin: 0 auto;\n  height: 100%;\n  padding: 0 2rem;\n  line-height: 1.5rem;\n  font-family: 'Open Sans', sans-serif;\n  text-align: left;\n\n  @media screen and (max-width: 700px) {\n    padding: 0;\n    margin-top: 1.5rem;\n    width: 100%;\n  }\n`","import React from 'react';\nimport styled from 'styled-components';\n\nimport  { GiTriforce } from 'react-icons/gi';\n\nconst SkillsList = () => {\n  return (\n    <SkillsListContainer>\n      <ul>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">React (TypeScript and JavaScript)</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Redux and React Context API</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Gatsby</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">HTML5</span>\n        </li>\n      </ul>\n\n      <ul>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">NodeJS and Express</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">MongoDB and NoSQL</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Jest (React Snapshots, database injections)</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">SQL</span>\n        </li>\n      </ul>\n        \n      <ul>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">GraphQL</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Sass</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">TypeORM</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">SEO</span>\n        </li>\n      </ul>\n\n      <ul>\n        <li style={{ display: 'none' }}>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">PostgreSQL</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Adobe Photoshop</span>\n        </li>\n        <li>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\">Python</span>\n        </li>\n        <li style={{ display: 'none' }}>\n          <GiTriforce className=\"icon\" />\n          <GiTriforce className=\"list-type\" />\n          <span className=\"list-text\"></span>\n        </li>\n      </ul>\n    </SkillsListContainer>\n  )\n}\n\nexport default SkillsList;\n\nconst SkillsListContainer = styled.div`\n  margin: 2rem auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  width: 100%;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n\n  ul {\n    margin: 0 auto;\n    width: 100%;\n    text-align: left;\n    display: block;\n\n    @media screen and (max-width: 500px) {\n      height: auto;\n      padding: 0 1.5rem;\n      width: 90%;\n      display: block;\n    }\n  }\n\n  li {\n    list-style-type: none;\n    margin: 0.5rem auto;\n    text-align: left;\n    font-family: 'Open Sans', sans-serif;\n    color: #828282;\n\n    .list-type { display: none; }\n\n    @media screen and (max-width: 500px) {\n      .list-type {\n        display: inline-block;\n        width: 1rem;\n        font-size: 1rem;\n        color: #fecc27;\n        margin-right: 0.5rem;\n      }\n    }\n  }\n\n  .list-text {}\n\n  .icon {\n    font-size: 0.75rem;\n    margin: 0 1rem;\n    color: #fecc27;\n  }\n\n  @media screen and (max-width: 500px) {\n    .icon {\n      display: none;\n    }\n  }\n`","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nconst ProjectList = ({ modalState }) => {\n  const data = useStaticQuery(graphql`\n    query MyPaintings {\n      allFile(filter: {ext: {regex: \"/(jpg)|(png)|(jpeg)/\"}, \n        name: {in: [\"painting-creatures\", \"painting-mindful\", \"painting-battleship\", \"republic310-1\"]}}) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const paintings = [...data.allFile.edges]\n    .sort((a, b) => {\n      if (a.node.name < b.node.name) return -1;\n      if (a.node.name > b.node.name) return 1;\n    });\n\n  const [display, setDisplay] = useState({ status: true });\n\n  const projectRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      projectRef.current = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (projectRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.dipslay) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, projectRef]);\n\n  return (\n    <ProjectListContainer>.\n      <h1>Projects I've Made</h1>\n\n      <ProjectsList style={{ display: display.status ? 'block' : 'none' }} ref={projectRef}>\n        <ProjectContainer >\n          <ProjectAnchor to=\"/Creatures_of_Habit\">\n            <ProjectThumbnail\n              fluid={paintings[1].node.childImageSharp.fluid} \n              src={paintings[1].node.childImageSharp.fluid.src}\n              key={1} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>Creatures of Habit</ProjectTitle>\n          <ProjectDetails>\n            I made this project to help users quantify areas of their life that are intrinsically qualitative (e.g., mental health).\n          </ProjectDetails>\n          <ProjectLink to=\"/Creatures_of_Habit\">View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to=\"/Republic_310\">\n            <ProjectThumbnail \n              fluid={paintings[3].node.childImageSharp.fluid} \n              src={paintings[3].node.childImageSharp.fluid.src}\n              key={3} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>The Republic 310</ProjectTitle>\n          <ProjectDetails>I made this project for an e-commerce startup who wanted their own full-stack website.</ProjectDetails>\n          <ProjectLink to=\"/Republic_310\">View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to=\"/Mindful\">\n            <ProjectThumbnail \n              fluid={paintings[2].node.childImageSharp.fluid} \n              src={paintings[2].node.childImageSharp.fluid.src}\n              key={2} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>mindful.io</ProjectTitle>\n          <ProjectDetails>I made this project for the purpose of helping users to become more mindful in their daily life.</ProjectDetails>\n          <ProjectLink to=\"/Mindful\">View Project</ProjectLink>\n        </ProjectContainer>\n\n        <ProjectContainer>\n          <ProjectAnchor to=\"/Battleship\">\n            <ProjectThumbnail \n              fluid={paintings[0].node.childImageSharp.fluid} \n              src={paintings[0].node.childImageSharp.fluid.src}\n              key={0} \n              className=\"thumbnail\">\n            </ProjectThumbnail>\n          </ProjectAnchor>\n\n          <ProjectTitle>Battleship</ProjectTitle>\n          <ProjectDetails>This was the first project I made solely for the purpose of putting my skills into practice.</ProjectDetails>\n          <ProjectLink to=\"/Battleship\">View Project</ProjectLink>\n        </ProjectContainer>\n      </ProjectsList>\n    </ProjectListContainer>\n  )\n}\n\nexport default ProjectList;\n\nconst ProjectListContainer = styled.div``;\n\nconst ProjectsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin: 0 auto;\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ProjectContainer = styled.div`\n  display: block;\n  text-align: center;\n  margin: 2rem auto 8rem auto;\n  height: auto;\n  width: auto;\n  font-family: 'Open Sans', sans-serif;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst ProjectAnchor = styled(Link)``\n\nconst ProjectThumbnail = styled(Img)`\n  height: 75%;\n  width: 75%;\n  margin: 1rem auto;\n  border-radius: 5px;\n  box-shadow: 0 50px 100px -20px rgba(50,50,93,.25),0 30px 60px -30px rgba(0,0,0,.3);\n  transition: transform 0.3s;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 500px) {\n    height: auto;\n    display: block;\n  }\n`\n\nconst ProjectTitle = styled.h3`\n  margin: 2rem 0 0 0;\n  font-size: 1.5rem;\n  color: #36434d;\n`\n\nconst ProjectDetails = styled.p`\n  line-height: 1.25rem;\n  margin: 1rem auto;\n  width: 90%;\n  text-align: center;\n  color: #828282;\n`\n\nconst ProjectLink = styled(Link)`\n  color: #0070b7;\n  transition: border-bottom 0.3s ease 0s;\n  text-decoration: none;\n  font-family: 'Open Sans', sans-serif;\n\n  &:visited, &:link {\n    color: #0070b7;\n  }\n\n  &:hover {\n    color: #48CEF7;\n    border-bottom: 2px solid #48cef7; \n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 1.25rem;\n  }\n`","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components';\n\nimport SkillsList from './SkillsList';\nimport ProjectList from './ProjectList';\n\nimport 'fontsource-playfair-display/600.css';\nimport 'fontsource-open-sans';\n\nconst Body = ({ modalState }) => {\n  const [display, setDisplay] = useState({ status: true });\n\n  const bodyRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      bodyRef.current = false;\n    }\n  }, [bodyRef]);\n\n  useEffect(() => {\n    if (bodyRef.current) {\n      if (modalState.display) {\n        setDisplay({ status: false });\n      } else if (!modalState.display) {\n        setDisplay({ status: true });\n      }\n    }\n  }, [modalState, setDisplay, bodyRef]);\n\n  return ( \n    <BodyContainer>\n      <SkillsContainer id=\"skills\">\n        <h1>My Skills</h1>\n        <SkillsList />\n      </SkillsContainer>\n\n      <ProjectSection id=\"projects\">\n        <ProjectList modalState={modalState} />\n      </ProjectSection>\n    </BodyContainer>\n  )\n}\n\nexport default Body\n\nconst BodyContainer = styled.div`\n  margin: 0 7rem;\n  display: block;\n\n  @media screen and (max-width: 700px) {\n    margin: 0 1rem;\n  }\n`\n\nconst SkillsContainer = styled.div`\n  margin: 5rem auto;\n  width: 85%;\n\n  h1 {\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  @media screen and (max-width: 700px) {\n    display: block;\n\n    h1 {\n      text-align: center;\n    }\n  }\n`\n\nconst ProjectSection = styled.div`\n  display: block;\n  margin: 0 auto;\n  text-align: center;\n  width: 85%;\n\n  h1 {\n    text-align: left;\n    font-family: 'Playfair Display', sans-serif;\n    color: #36434d;\n  }\n\n  @media screen and (max-width: 700px) {\n    grid-template-columns: 1fr;\n\n    h1 {\n      text-align: center;\n    }\n  }\n`\n","import React from \"react\"\n\nimport NavLayout from '../components/NavLayout';\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from '../components/Header';\nimport Body from '../components/Body';\n\nconst IndexPage = () => (  \n  <NavLayout layout={'portfolio'}>\n    <Layout>\n      <SEO title=\"Brandon Zirulnikoff | Software Developer\" />\n      <Header />\n      <Body />\n    </Layout>\n  </NavLayout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}