{"version":3,"sources":["webpack://portfolio_blog/./src/pages/Creatures_of_Habit.js"],"names":["images","useStaticQuery","allFile","edges","map","img","fluid","node","childImageSharp","src","projectProps","title","details","stack","link","sourceCode","purpose","tech","lessons","thumbnail","length","screenshots","slice","alt1","alt2","icon","otherA","alt","name","otherB"],"mappings":"sMAyIA,UAhI2B,WACzB,IAqBMA,GArBOC,oBAAe,cAqBRC,QAAQC,MAAMC,KAAI,SAAAC,GACpC,MAAO,CACLC,MAAOD,EAAIE,KAAKC,gBAAgBF,MAChCG,IAAKJ,EAAIE,KAAKC,gBAAgBF,MAAMG,QA4ElCC,EAAe,CACnBC,MAAO,qBACPC,QAvEW,4WAwEXC,MAjEY,CACZ,qBACA,oBACA,MACA,SACA,UACA,QACA,gBACA,SACA,UACA,UAwDAC,KArDW,yCAsDXC,WApDiB,0CAqDjBC,QAnDW,+VAoDXC,KA9CQ,iaA+CRC,QAzCW,mqBA0CXC,UAjFgBnB,EAAOA,EAAOoB,OAAS,GAkFvCC,YAjFkBrB,EAAOsB,MAAM,EAAGtB,EAAOoB,OAAS,GAkFlDG,KAlCA,uEAmCAC,KAjCQ,kKAkCRC,KAAM,aAGR,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKd,MAAM,iDACX,gBAAC,IAAD,CAASD,aAAcA,IACvB,gBAAC,IAAD,CAAegB,OArCN,CACbZ,KAAM,gBACNH,MAAO,mBACPgB,IAAI,0IAGJC,KAAM,iBA+B6BC,OA5BtB,CACbf,KAAM,WACNH,MAAO,aACPgB,IAAK,gEACLC,KAAM","file":"component---src-pages-creatures-of-habit-js-04edf38c7ac35e53b225.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport NavLayout from \"../components/Nav/NavLayout\"\nimport ProjectLayout from \"../components/Project/ProjectLayout\"\nimport SEO from \"../components/seo\"\nimport Project from \"../components/Project/Project\"\nimport ProjectFooter from \"../components/Project/ProjectFooter\"\n\nconst Creatures_of_Habit = () => {\n  const data = useStaticQuery(graphql`\n    query MyCreatures {\n      allFile(\n        filter: {\n          ext: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n          name: { in: [\"creatures-0\", \"creatures-1\"] }\n        }\n      ) {\n        edges {\n          node {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const images = data.allFile.edges.map(img => {\n    return {\n      fluid: img.node.childImageSharp.fluid,\n      src: img.node.childImageSharp.fluid.src,\n    }\n  })\n\n  const thumbnail = images[images.length - 1]\n  const screenshots = images.slice(0, images.length - 1)\n\n  const details = `\n    The project that started it all. \n    I wanted a way to quantify areas of my life that are inherently qualitative (e.g., mental health, philosophy, etc.). \n    So I set out on learning to program from a background with zero prior experience or expertise, \n    and I ended up creating a \"full-stack\" web application that me and my friends use today.\n  `\n\n  const stack = [\n    \"React (JavaScript)\",\n    \"React Context API\",\n    \"CSS\",\n    \"NodeJS\",\n    \"Express\",\n    \"NoSQL\",\n    \"JSONWebTokens\",\n    \"bcrypt\",\n    \"MongoDB\",\n    \"Heroku\",\n  ]\n\n  const link = \"https://brandonzpb.github.io/creatures\"\n\n  const sourceCode = \"https://github.com/brandonzpb/creatures\"\n\n  const purpose = `\n    After seeing so many \"Life RPG\" apps, I was inspired to make my own version that had all the features I wanted \n    that the others lacked. So the purpose of this app is to do just that: provide a nostalgic alternative \n    to apps that measure areas of your life the way a video game measures experience points and character evolution.\n  `\n\n  const tech = `\n    I used React to create this project because it seemed like the best choice, with its packages, hooks, and state management. \n    I also used NodeJS and Express to create the server because I really enjoy building with JavaScript and I was eager to learn how to \n    make a \"full-stack\" web app with just one programming language. I also used MongoDB because of the scalable cloud services it provides. \n  `\n\n  const lessons = `\n    The number of lessons I learned from this project alone is too many to detail in a simple paragraph! \n    Firstly, due to the complex structure of the \"creature\" objects, I learned a tremendous amount about the importance of refactoring code \n    and building a project that is clean and easy to maintain. \n    I also learned about the importance of writing unit tests before coding any of the project itself. \n    Another important concept I learned was the necessity of having a plan when designing any project: I learned what \n    works for me, how to mitigate my weaknesses, and make great use of my strengths. I used this plan when creating mindful.io.\n  `\n\n  const alt1 =\n    \"A serene painting of a light blue sky, a grassy field, and the ocean\"\n\n  const alt2 = `Screenshot of the Creatures of Habit app; \n    a Pokemon called Porygon with a nickname of duck.js has various habits, \n    such as studying and practing\n  `\n\n  const otherA = {\n    link: \"/Republic_310\",\n    title: \"The Republic 310\",\n    alt: `The landing page of The Republic 310. The banner is of two female surfers walking along\n      an empty beach, holding surfboards\n    `,\n    name: \"republic310-0\",\n  }\n\n  const otherB = {\n    link: \"/Mindful\",\n    title: \"mindful.io\",\n    alt: \"Peaceful image with black stones and bamboo in the background\",\n    name: \"painting-mindful\",\n  }\n\n  const projectProps = {\n    title: \"Creatures of Habit\",\n    details,\n    stack,\n    link,\n    sourceCode,\n    purpose,\n    tech,\n    lessons,\n    thumbnail,\n    screenshots,\n    alt1,\n    alt2,\n    icon: \"creatures\",\n  }\n\n  return (\n    <NavLayout>\n      <ProjectLayout>\n        <SEO title=\"Creatures of Habit (PokÃ©mon version) | BZWEB\" />\n        <Project projectProps={projectProps} />\n        <ProjectFooter otherA={otherA} otherB={otherB} />\n      </ProjectLayout>\n    </NavLayout>\n  )\n}\n\nexport default Creatures_of_Habit\n"],"sourceRoot":""}